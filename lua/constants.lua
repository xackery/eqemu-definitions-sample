function foo()
	eq.debug(string.format("%d", ExpeditionLockMessage.Begin))
	eq.debug(string.format("%d", ExpeditionLockMessage.Close))
	eq.debug(string.format("%d", ExpeditionLockMessage.None))
	eq.debug(string.format("%d", InventoryWhere.Bank))
	eq.debug(string.format("%d", InventoryWhere.Cursor))
	eq.debug(string.format("%d", InventoryWhere.Personal))
	eq.debug(string.format("%d", InventoryWhere.SharedBank))
	eq.debug(string.format("%d", InventoryWhere.Trading))
	eq.debug(string.format("%d", Opcode['0x0193']))
	eq.debug(string.format("%d", Opcode['0x0347']))
	eq.debug(string.format("%d", Opcode.AAAction))
	eq.debug(string.format("%d", Opcode.AAExpUpdate))
	eq.debug(string.format("%d", Opcode.AcceptNewTask))
	eq.debug(string.format("%d", Opcode.AckPacket))
	eq.debug(string.format("%d", Opcode.Action))
	eq.debug(string.format("%d", Opcode.Action2))
	eq.debug(string.format("%d", Opcode.AdventureData))
	eq.debug(string.format("%d", Opcode.AdventureDetails))
	eq.debug(string.format("%d", Opcode.AdventureFinish))
	eq.debug(string.format("%d", Opcode.AdventureInfo))
	eq.debug(string.format("%d", Opcode.AdventureInfoRequest))
	eq.debug(string.format("%d", Opcode.AdventureLeaderboardReply))
	eq.debug(string.format("%d", Opcode.AdventureLeaderboardRequest))
	eq.debug(string.format("%d", Opcode.AdventureMerchantPurchase))
	eq.debug(string.format("%d", Opcode.AdventureMerchantRequest))
	eq.debug(string.format("%d", Opcode.AdventureMerchantResponse))
	eq.debug(string.format("%d", Opcode.AdventureMerchantSell))
	eq.debug(string.format("%d", Opcode.AdventurePointsUpdate))
	eq.debug(string.format("%d", Opcode.AdventureRequest))
	eq.debug(string.format("%d", Opcode.AdventureStatsReply))
	eq.debug(string.format("%d", Opcode.AdventureStatsRequest))
	eq.debug(string.format("%d", Opcode.AdventureUpdate))
	eq.debug(string.format("%d", Opcode.AltCurrency))
	eq.debug(string.format("%d", Opcode.AltCurrencyMerchantReply))
	eq.debug(string.format("%d", Opcode.AltCurrencyMerchantRequest))
	eq.debug(string.format("%d", Opcode.AltCurrencyPurchase))
	eq.debug(string.format("%d", Opcode.AltCurrencyReclaim))
	eq.debug(string.format("%d", Opcode.AltCurrencySell))
	eq.debug(string.format("%d", Opcode.AltCurrencySellSelection))
	eq.debug(string.format("%d", Opcode.Animation))
	eq.debug(string.format("%d", Opcode.AnnoyingZoneUnknown))
	eq.debug(string.format("%d", Opcode.ApplyPoison))
	eq.debug(string.format("%d", Opcode.ApproveName))
	eq.debug(string.format("%d", Opcode.ApproveWorld))
	eq.debug(string.format("%d", Opcode.ApproveZone))
	eq.debug(string.format("%d", Opcode.Assist))
	eq.debug(string.format("%d", Opcode.AssistGroup))
	eq.debug(string.format("%d", Opcode.AugmentInfo))
	eq.debug(string.format("%d", Opcode.AugmentItem))
	eq.debug(string.format("%d", Opcode.AutoAttack))
	eq.debug(string.format("%d", Opcode.AutoAttack2))
	eq.debug(string.format("%d", Opcode.AutoFire))
	eq.debug(string.format("%d", Opcode.Bandolier))
	eq.debug(string.format("%d", Opcode.BankerChange))
	eq.debug(string.format("%d", Opcode.Barter))
	eq.debug(string.format("%d", Opcode.Bazaar))
	eq.debug(string.format("%d", Opcode.BazaarInspect))
	eq.debug(string.format("%d", Opcode.BazaarSearch))
	eq.debug(string.format("%d", Opcode.BecomeCorpse))
	eq.debug(string.format("%d", Opcode.BecomeTrader))
	eq.debug(string.format("%d", Opcode.Begging))
	eq.debug(string.format("%d", Opcode.BeginCast))
	eq.debug(string.format("%d", Opcode.Bind_Wound))
	eq.debug(string.format("%d", Opcode.BlockedBuffs))
	eq.debug(string.format("%d", Opcode.BoardBoat))
	eq.debug(string.format("%d", Opcode.Buff))
	eq.debug(string.format("%d", Opcode.BuffCreate))
	eq.debug(string.format("%d", Opcode.BuffRemoveRequest))
	eq.debug(string.format("%d", Opcode.Bug))
	eq.debug(string.format("%d", Opcode.CameraEffect))
	eq.debug(string.format("%d", Opcode.Camp))
	eq.debug(string.format("%d", Opcode.CancelTask))
	eq.debug(string.format("%d", Opcode.CancelTrade))
	eq.debug(string.format("%d", Opcode.CastSpell))
	eq.debug(string.format("%d", Opcode.ChangeSize))
	eq.debug(string.format("%d", Opcode.ChannelMessage))
	eq.debug(string.format("%d", Opcode.CharInventory))
	eq.debug(string.format("%d", Opcode.CharacterCreate))
	eq.debug(string.format("%d", Opcode.CharacterCreateRequest))
	eq.debug(string.format("%d", Opcode.Charm))
	eq.debug(string.format("%d", Opcode.ChatMessage))
	eq.debug(string.format("%d", Opcode.ClearBlockedBuffs))
	eq.debug(string.format("%d", Opcode.ClearNPCMarks))
	eq.debug(string.format("%d", Opcode.ClearObject))
	eq.debug(string.format("%d", Opcode.ClearSurname))
	eq.debug(string.format("%d", Opcode.ClickDoor))
	eq.debug(string.format("%d", Opcode.ClickObject))
	eq.debug(string.format("%d", Opcode.ClickObjectAction))
	eq.debug(string.format("%d", Opcode.ClientError))
	eq.debug(string.format("%d", Opcode.ClientReady))
	eq.debug(string.format("%d", Opcode.ClientTimeStamp))
	eq.debug(string.format("%d", Opcode.ClientUpdate))
	eq.debug(string.format("%d", Opcode.CloseContainer))
	eq.debug(string.format("%d", Opcode.CloseTributeMaster))
	eq.debug(string.format("%d", Opcode.ColoredText))
	eq.debug(string.format("%d", Opcode.CombatAbility))
	eq.debug(string.format("%d", Opcode.Command))
	eq.debug(string.format("%d", Opcode.CompletedTasks))
	eq.debug(string.format("%d", Opcode.ConfirmDelete))
	eq.debug(string.format("%d", Opcode.Consent))
	eq.debug(string.format("%d", Opcode.ConsentDeny))
	eq.debug(string.format("%d", Opcode.ConsentResponse))
	eq.debug(string.format("%d", Opcode.Consider))
	eq.debug(string.format("%d", Opcode.ConsiderCorpse))
	eq.debug(string.format("%d", Opcode.Consume))
	eq.debug(string.format("%d", Opcode.ControlBoat))
	eq.debug(string.format("%d", Opcode.CorpseDrag))
	eq.debug(string.format("%d", Opcode.CorpseDrop))
	eq.debug(string.format("%d", Opcode.CrashDump))
	eq.debug(string.format("%d", Opcode.CrystalCountUpdate))
	eq.debug(string.format("%d", Opcode.CrystalCreate))
	eq.debug(string.format("%d", Opcode.CrystalReclaim))
	eq.debug(string.format("%d", Opcode.CustomTitles))
	eq.debug(string.format("%d", Opcode.Damage))
	eq.debug(string.format("%d", Opcode.Death))
	eq.debug(string.format("%d", Opcode.DelegateAbility))
	eq.debug(string.format("%d", Opcode.DeleteCharacter))
	eq.debug(string.format("%d", Opcode.DeleteCharge))
	eq.debug(string.format("%d", Opcode.DeleteItem))
	eq.debug(string.format("%d", Opcode.DeletePetition))
	eq.debug(string.format("%d", Opcode.DeleteSpawn))
	eq.debug(string.format("%d", Opcode.DeleteSpell))
	eq.debug(string.format("%d", Opcode.DenyResponse))
	eq.debug(string.format("%d", Opcode.Disarm))
	eq.debug(string.format("%d", Opcode.DisarmTraps))
	eq.debug(string.format("%d", Opcode.DisciplineTimer))
	eq.debug(string.format("%d", Opcode.DisciplineUpdate))
	eq.debug(string.format("%d", Opcode.DiscordMerchantInventory))
	eq.debug(string.format("%d", Opcode.DoGroupLeadershipAbility))
	eq.debug(string.format("%d", Opcode.DuelAccept))
	eq.debug(string.format("%d", Opcode.DuelDecline))
	eq.debug(string.format("%d", Opcode.DumpName))
	eq.debug(string.format("%d", Opcode.Dye))
	eq.debug(string.format("%d", Opcode.DynamicWall))
	eq.debug(string.format("%d", Opcode.DzAddPlayer))
	eq.debug(string.format("%d", Opcode.DzChooseZone))
	eq.debug(string.format("%d", Opcode.DzChooseZoneReply))
	eq.debug(string.format("%d", Opcode.DzCompass))
	eq.debug(string.format("%d", Opcode.DzExpeditionEndsWarning))
	eq.debug(string.format("%d", Opcode.DzExpeditionInfo))
	eq.debug(string.format("%d", Opcode.DzExpeditionInvite))
	eq.debug(string.format("%d", Opcode.DzExpeditionInviteResponse))
	eq.debug(string.format("%d", Opcode.DzExpeditionLockoutTimers))
	eq.debug(string.format("%d", Opcode.DzListTimers))
	eq.debug(string.format("%d", Opcode.DzMakeLeader))
	eq.debug(string.format("%d", Opcode.DzMemberList))
	eq.debug(string.format("%d", Opcode.DzMemberListName))
	eq.debug(string.format("%d", Opcode.DzMemberListStatus))
	eq.debug(string.format("%d", Opcode.DzPlayerList))
	eq.debug(string.format("%d", Opcode.DzQuit))
	eq.debug(string.format("%d", Opcode.DzRemovePlayer))
	eq.debug(string.format("%d", Opcode.DzSetLeaderName))
	eq.debug(string.format("%d", Opcode.DzSwapPlayer))
	eq.debug(string.format("%d", Opcode.Emote))
	eq.debug(string.format("%d", Opcode.EndLootRequest))
	eq.debug(string.format("%d", Opcode.EnduranceUpdate))
	eq.debug(string.format("%d", Opcode.EnterChat))
	eq.debug(string.format("%d", Opcode.EnterWorld))
	eq.debug(string.format("%d", Opcode.EnvDamage))
	eq.debug(string.format("%d", Opcode.ExpUpdate))
	eq.debug(string.format("%d", Opcode.ExpansionInfo))
	eq.debug(string.format("%d", Opcode.ExploreUnknown))
	eq.debug(string.format("%d", Opcode.FaceChange))
	eq.debug(string.format("%d", Opcode.Feedback))
	eq.debug(string.format("%d", Opcode.FeignDeath))
	eq.debug(string.format("%d", Opcode.FellowshipUpdate))
	eq.debug(string.format("%d", Opcode.FindPersonReply))
	eq.debug(string.format("%d", Opcode.FindPersonRequest))
	eq.debug(string.format("%d", Opcode.FinishTrade))
	eq.debug(string.format("%d", Opcode.FinishWindow))
	eq.debug(string.format("%d", Opcode.FinishWindow2))
	eq.debug(string.format("%d", Opcode.Fishing))
	eq.debug(string.format("%d", Opcode.Fling))
	eq.debug(string.format("%d", Opcode.FloatListThing))
	eq.debug(string.format("%d", Opcode.Forage))
	eq.debug(string.format("%d", Opcode.ForceFindPerson))
	eq.debug(string.format("%d", Opcode.FormattedMessage))
	eq.debug(string.format("%d", Opcode.FriendsWho))
	eq.debug(string.format("%d", Opcode.GMApproval))
	eq.debug(string.format("%d", Opcode.GMBecomeNPC))
	eq.debug(string.format("%d", Opcode.GMDelCorpse))
	eq.debug(string.format("%d", Opcode.GMEmoteZone))
	eq.debug(string.format("%d", Opcode.GMEndTraining))
	eq.debug(string.format("%d", Opcode.GMEndTrainingResponse))
	eq.debug(string.format("%d", Opcode.GMFind))
	eq.debug(string.format("%d", Opcode.GMGoto))
	eq.debug(string.format("%d", Opcode.GMHideMe))
	eq.debug(string.format("%d", Opcode.GMKick))
	eq.debug(string.format("%d", Opcode.GMKill))
	eq.debug(string.format("%d", Opcode.GMLastName))
	eq.debug(string.format("%d", Opcode.GMNameChange))
	eq.debug(string.format("%d", Opcode.GMSearchCorpse))
	eq.debug(string.format("%d", Opcode.GMServers))
	eq.debug(string.format("%d", Opcode.GMSummon))
	eq.debug(string.format("%d", Opcode.GMToggle))
	eq.debug(string.format("%d", Opcode.GMTrainSkill))
	eq.debug(string.format("%d", Opcode.GMTrainSkillConfirm))
	eq.debug(string.format("%d", Opcode.GMTraining))
	eq.debug(string.format("%d", Opcode.GMZoneRequest))
	eq.debug(string.format("%d", Opcode.GMZoneRequest2))
	eq.debug(string.format("%d", Opcode.GetGuildMOTD))
	eq.debug(string.format("%d", Opcode.GetGuildMOTDReply))
	eq.debug(string.format("%d", Opcode.GetGuildsList))
	eq.debug(string.format("%d", Opcode.GiveMoney))
	eq.debug(string.format("%d", Opcode.GroundSpawn))
	eq.debug(string.format("%d", Opcode.GroupAcknowledge))
	eq.debug(string.format("%d", Opcode.GroupCancelInvite))
	eq.debug(string.format("%d", Opcode.GroupDelete))
	eq.debug(string.format("%d", Opcode.GroupDisband))
	eq.debug(string.format("%d", Opcode.GroupDisbandOther))
	eq.debug(string.format("%d", Opcode.GroupDisbandYou))
	eq.debug(string.format("%d", Opcode.GroupFollow))
	eq.debug(string.format("%d", Opcode.GroupFollow2))
	eq.debug(string.format("%d", Opcode.GroupInvite))
	eq.debug(string.format("%d", Opcode.GroupInvite2))
	eq.debug(string.format("%d", Opcode.GroupLeaderChange))
	eq.debug(string.format("%d", Opcode.GroupLeadershipAAUpdate))
	eq.debug(string.format("%d", Opcode.GroupMakeLeader))
	eq.debug(string.format("%d", Opcode.GroupRoles))
	eq.debug(string.format("%d", Opcode.GroupUpdate))
	eq.debug(string.format("%d", Opcode.GroupUpdateB))
	eq.debug(string.format("%d", Opcode.GroupUpdateLeaderAA))
	eq.debug(string.format("%d", Opcode.GuildBank))
	eq.debug(string.format("%d", Opcode.GuildCreate))
	eq.debug(string.format("%d", Opcode.GuildDelete))
	eq.debug(string.format("%d", Opcode.GuildDemote))
	eq.debug(string.format("%d", Opcode.GuildInvite))
	eq.debug(string.format("%d", Opcode.GuildInviteAccept))
	eq.debug(string.format("%d", Opcode.GuildLeader))
	eq.debug(string.format("%d", Opcode.GuildMOTD))
	eq.debug(string.format("%d", Opcode.GuildManageAdd))
	eq.debug(string.format("%d", Opcode.GuildManageBanker))
	eq.debug(string.format("%d", Opcode.GuildManageRemove))
	eq.debug(string.format("%d", Opcode.GuildManageStatus))
	eq.debug(string.format("%d", Opcode.GuildMemberLevelUpdate))
	eq.debug(string.format("%d", Opcode.GuildMemberList))
	eq.debug(string.format("%d", Opcode.GuildMemberUpdate))
	eq.debug(string.format("%d", Opcode.GuildPeace))
	eq.debug(string.format("%d", Opcode.GuildPromote))
	eq.debug(string.format("%d", Opcode.GuildPublicNote))
	eq.debug(string.format("%d", Opcode.GuildRemove))
	eq.debug(string.format("%d", Opcode.GuildStatus))
	eq.debug(string.format("%d", Opcode.GuildTributeInfo))
	eq.debug(string.format("%d", Opcode.GuildUpdate))
	eq.debug(string.format("%d", Opcode.GuildWar))
	eq.debug(string.format("%d", Opcode.GuildsList))
	eq.debug(string.format("%d", Opcode.HPUpdate))
	eq.debug(string.format("%d", Opcode.Heartbeat))
	eq.debug(string.format("%d", Opcode.Hide))
	eq.debug(string.format("%d", Opcode.HideCorpse))
	eq.debug(string.format("%d", Opcode.Illusion))
	eq.debug(string.format("%d", Opcode.IncreaseStats))
	eq.debug(string.format("%d", Opcode.InitialHPUpdate))
	eq.debug(string.format("%d", Opcode.InitialMobHealth))
	eq.debug(string.format("%d", Opcode.InspectAnswer))
	eq.debug(string.format("%d", Opcode.InspectMessageUpdate))
	eq.debug(string.format("%d", Opcode.InspectRequest))
	eq.debug(string.format("%d", Opcode.InstillDoubt))
	eq.debug(string.format("%d", Opcode.InterruptCast))
	eq.debug(string.format("%d", Opcode.ItemLinkClick))
	eq.debug(string.format("%d", Opcode.ItemLinkResponse))
	eq.debug(string.format("%d", Opcode.ItemLinkText))
	eq.debug(string.format("%d", Opcode.ItemName))
	eq.debug(string.format("%d", Opcode.ItemPacket))
	eq.debug(string.format("%d", Opcode.ItemPreview))
	eq.debug(string.format("%d", Opcode.ItemVerifyReply))
	eq.debug(string.format("%d", Opcode.ItemVerifyRequest))
	eq.debug(string.format("%d", Opcode.ItemViewUnknown))
	eq.debug(string.format("%d", Opcode.Jump))
	eq.debug(string.format("%d", Opcode.KeyRing))
	eq.debug(string.format("%d", Opcode.KnowledgeBase))
	eq.debug(string.format("%d", Opcode.LDoNButton))
	eq.debug(string.format("%d", Opcode.LDoNDisarmTraps))
	eq.debug(string.format("%d", Opcode.LDoNInspect))
	eq.debug(string.format("%d", Opcode.LDoNOpen))
	eq.debug(string.format("%d", Opcode.LDoNPickLock))
	eq.debug(string.format("%d", Opcode.LDoNSenseTraps))
	eq.debug(string.format("%d", Opcode.LFGAppearance))
	eq.debug(string.format("%d", Opcode.LFGCommand))
	eq.debug(string.format("%d", Opcode.LFGGetMatchesRequest))
	eq.debug(string.format("%d", Opcode.LFGGetMatchesResponse))
	eq.debug(string.format("%d", Opcode.LFGResponse))
	eq.debug(string.format("%d", Opcode.LFGuild))
	eq.debug(string.format("%d", Opcode.LFPCommand))
	eq.debug(string.format("%d", Opcode.LFPGetMatchesRequest))
	eq.debug(string.format("%d", Opcode.LFPGetMatchesResponse))
	eq.debug(string.format("%d", Opcode.LeadershipExpToggle))
	eq.debug(string.format("%d", Opcode.LeadershipExpUpdate))
	eq.debug(string.format("%d", Opcode.LeaveAdventure))
	eq.debug(string.format("%d", Opcode.LeaveBoat))
	eq.debug(string.format("%d", Opcode.LevelAppearance))
	eq.debug(string.format("%d", Opcode.LevelUpdate))
	eq.debug(string.format("%d", Opcode.LoadSpellSet))
	eq.debug(string.format("%d", Opcode.LocInfo))
	eq.debug(string.format("%d", Opcode.LockoutTimerInfo))
	eq.debug(string.format("%d", Opcode.LogServer))
	eq.debug(string.format("%d", Opcode.Login))
	eq.debug(string.format("%d", Opcode.LoginAccepted))
	eq.debug(string.format("%d", Opcode.LoginComplete))
	eq.debug(string.format("%d", Opcode.LoginUnknown1))
	eq.debug(string.format("%d", Opcode.LoginUnknown2))
	eq.debug(string.format("%d", Opcode.Logout))
	eq.debug(string.format("%d", Opcode.LogoutReply))
	eq.debug(string.format("%d", Opcode.LootComplete))
	eq.debug(string.format("%d", Opcode.LootItem))
	eq.debug(string.format("%d", Opcode.LootRequest))
	eq.debug(string.format("%d", Opcode.MOTD))
	eq.debug(string.format("%d", Opcode.ManaChange))
	eq.debug(string.format("%d", Opcode.ManaUpdate))
	eq.debug(string.format("%d", Opcode.MarkNPC))
	eq.debug(string.format("%d", Opcode.Marquee))
	eq.debug(string.format("%d", Opcode.MemorizeSpell))
	eq.debug(string.format("%d", Opcode.Mend))
	eq.debug(string.format("%d", Opcode.MendHPUpdate))
	eq.debug(string.format("%d", Opcode.MercenaryAssign))
	eq.debug(string.format("%d", Opcode.MercenaryCommand))
	eq.debug(string.format("%d", Opcode.MercenaryDataRequest))
	eq.debug(string.format("%d", Opcode.MercenaryDataResponse))
	eq.debug(string.format("%d", Opcode.MercenaryDataUpdate))
	eq.debug(string.format("%d", Opcode.MercenaryDataUpdateRequest))
	eq.debug(string.format("%d", Opcode.MercenaryDismiss))
	eq.debug(string.format("%d", Opcode.MercenaryHire))
	eq.debug(string.format("%d", Opcode.MercenarySuspendRequest))
	eq.debug(string.format("%d", Opcode.MercenarySuspendResponse))
	eq.debug(string.format("%d", Opcode.MercenaryTimer))
	eq.debug(string.format("%d", Opcode.MercenaryTimerRequest))
	eq.debug(string.format("%d", Opcode.MercenaryUnknown1))
	eq.debug(string.format("%d", Opcode.MercenaryUnsuspendResponse))
	eq.debug(string.format("%d", Opcode.MobEnduranceUpdate))
	eq.debug(string.format("%d", Opcode.MobHealth))
	eq.debug(string.format("%d", Opcode.MobManaUpdate))
	eq.debug(string.format("%d", Opcode.MobRename))
	eq.debug(string.format("%d", Opcode.MobUpdate))
	eq.debug(string.format("%d", Opcode.MoneyOnCorpse))
	eq.debug(string.format("%d", Opcode.MoneyUpdate))
	eq.debug(string.format("%d", Opcode.MoveCoin))
	eq.debug(string.format("%d", Opcode.MoveDoor))
	eq.debug(string.format("%d", Opcode.MoveItem))
	eq.debug(string.format("%d", Opcode.MoveLogDisregard))
	eq.debug(string.format("%d", Opcode.MoveLogRequest))
	eq.debug(string.format("%d", Opcode.MultiLineMsg))
	eq.debug(string.format("%d", Opcode.NewSpawn))
	eq.debug(string.format("%d", Opcode.NewTitlesAvailable))
	eq.debug(string.format("%d", Opcode.NewZone))
	eq.debug(string.format("%d", Opcode.OnLevelMessage))
	eq.debug(string.format("%d", Opcode.OpenContainer))
	eq.debug(string.format("%d", Opcode.OpenDiscordMerchant))
	eq.debug(string.format("%d", Opcode.OpenGuildTributeMaster))
	eq.debug(string.format("%d", Opcode.OpenInventory))
	eq.debug(string.format("%d", Opcode.OpenTributeMaster))
	eq.debug(string.format("%d", Opcode.PDeletePetition))
	eq.debug(string.format("%d", Opcode.PVPLeaderBoardDetailsReply))
	eq.debug(string.format("%d", Opcode.PVPLeaderBoardDetailsRequest))
	eq.debug(string.format("%d", Opcode.PVPLeaderBoardReply))
	eq.debug(string.format("%d", Opcode.PVPLeaderBoardRequest))
	eq.debug(string.format("%d", Opcode.PVPStats))
	eq.debug(string.format("%d", Opcode.PetBuffWindow))
	eq.debug(string.format("%d", Opcode.PetCommands))
	eq.debug(string.format("%d", Opcode.Petition))
	eq.debug(string.format("%d", Opcode.PetitionBug))
	eq.debug(string.format("%d", Opcode.PetitionCheckIn))
	eq.debug(string.format("%d", Opcode.PetitionCheckout))
	eq.debug(string.format("%d", Opcode.PetitionCheckout2))
	eq.debug(string.format("%d", Opcode.PetitionDelete))
	eq.debug(string.format("%d", Opcode.PetitionQue))
	eq.debug(string.format("%d", Opcode.PetitionRefresh))
	eq.debug(string.format("%d", Opcode.PetitionResolve))
	eq.debug(string.format("%d", Opcode.PetitionSearch))
	eq.debug(string.format("%d", Opcode.PetitionSearchResults))
	eq.debug(string.format("%d", Opcode.PetitionSearchText))
	eq.debug(string.format("%d", Opcode.PetitionUnCheckout))
	eq.debug(string.format("%d", Opcode.PetitionUpdate))
	eq.debug(string.format("%d", Opcode.PickPocket))
	eq.debug(string.format("%d", Opcode.PlayEverquestRequest))
	eq.debug(string.format("%d", Opcode.PlayEverquestResponse))
	eq.debug(string.format("%d", Opcode.PlayMP3))
	eq.debug(string.format("%d", Opcode.PlayerProfile))
	eq.debug(string.format("%d", Opcode.PlayerStateAdd))
	eq.debug(string.format("%d", Opcode.PlayerStateRemove))
	eq.debug(string.format("%d", Opcode.Poll))
	eq.debug(string.format("%d", Opcode.PollResponse))
	eq.debug(string.format("%d", Opcode.PopupResponse))
	eq.debug(string.format("%d", Opcode.PostEnterWorld))
	eq.debug(string.format("%d", Opcode.PotionBelt))
	eq.debug(string.format("%d", Opcode.PreLogoutReply))
	eq.debug(string.format("%d", Opcode.PurchaseLeadershipAA))
	eq.debug(string.format("%d", Opcode.QueryResponseThing))
	eq.debug(string.format("%d", Opcode.RaidInvite))
	eq.debug(string.format("%d", Opcode.RaidJoin))
	eq.debug(string.format("%d", Opcode.RaidUpdate))
	eq.debug(string.format("%d", Opcode.RandomNameGenerator))
	eq.debug(string.format("%d", Opcode.RandomReply))
	eq.debug(string.format("%d", Opcode.RandomReq))
	eq.debug(string.format("%d", Opcode.ReadBook))
	eq.debug(string.format("%d", Opcode.RecipeAutoCombine))
	eq.debug(string.format("%d", Opcode.RecipeDetails))
	eq.debug(string.format("%d", Opcode.RecipeReply))
	eq.debug(string.format("%d", Opcode.RecipesFavorite))
	eq.debug(string.format("%d", Opcode.RecipesSearch))
	eq.debug(string.format("%d", Opcode.ReclaimCrystals))
	eq.debug(string.format("%d", Opcode.ReloadUI))
	eq.debug(string.format("%d", Opcode.RemoveAllDoors))
	eq.debug(string.format("%d", Opcode.RemoveBlockedBuffs))
	eq.debug(string.format("%d", Opcode.RemoveNimbusEffect))
	eq.debug(string.format("%d", Opcode.Report))
	eq.debug(string.format("%d", Opcode.ReqClientSpawn))
	eq.debug(string.format("%d", Opcode.ReqNewZone))
	eq.debug(string.format("%d", Opcode.RequestClientZoneChange))
	eq.debug(string.format("%d", Opcode.RequestDuel))
	eq.debug(string.format("%d", Opcode.RequestKnowledgeBase))
	eq.debug(string.format("%d", Opcode.RequestTitles))
	eq.debug(string.format("%d", Opcode.RespawnWindow))
	eq.debug(string.format("%d", Opcode.RespondAA))
	eq.debug(string.format("%d", Opcode.RestState))
	eq.debug(string.format("%d", Opcode.Rewind))
	eq.debug(string.format("%d", Opcode.RezzAnswer))
	eq.debug(string.format("%d", Opcode.RezzComplete))
	eq.debug(string.format("%d", Opcode.RezzRequest))
	eq.debug(string.format("%d", Opcode.Sacrifice))
	eq.debug(string.format("%d", Opcode.SafeFallSuccess))
	eq.debug(string.format("%d", Opcode.SafePoint))
	eq.debug(string.format("%d", Opcode.Save))
	eq.debug(string.format("%d", Opcode.SaveOnZoneReq))
	eq.debug(string.format("%d", Opcode.SelectTribute))
	eq.debug(string.format("%d", Opcode.SendAAStats))
	eq.debug(string.format("%d", Opcode.SendAATable))
	eq.debug(string.format("%d", Opcode.SendCharInfo))
	eq.debug(string.format("%d", Opcode.SendExpZonein))
	eq.debug(string.format("%d", Opcode.SendFindableNPCs))
	eq.debug(string.format("%d", Opcode.SendGuildTributes))
	eq.debug(string.format("%d", Opcode.SendLoginInfo))
	eq.debug(string.format("%d", Opcode.SendMaxCharacters))
	eq.debug(string.format("%d", Opcode.SendMembership))
	eq.debug(string.format("%d", Opcode.SendMembershipDetails))
	eq.debug(string.format("%d", Opcode.SendSystemStats))
	eq.debug(string.format("%d", Opcode.SendTitleList))
	eq.debug(string.format("%d", Opcode.SendTributes))
	eq.debug(string.format("%d", Opcode.SendZonepoints))
	eq.debug(string.format("%d", Opcode.SenseHeading))
	eq.debug(string.format("%d", Opcode.SenseTraps))
	eq.debug(string.format("%d", Opcode.ServerListRequest))
	eq.debug(string.format("%d", Opcode.ServerListResponse))
	eq.debug(string.format("%d", Opcode.SessionReady))
	eq.debug(string.format("%d", Opcode.SetChatServer))
	eq.debug(string.format("%d", Opcode.SetChatServer2))
	eq.debug(string.format("%d", Opcode.SetGroupTarget))
	eq.debug(string.format("%d", Opcode.SetGuildMOTD))
	eq.debug(string.format("%d", Opcode.SetGuildRank))
	eq.debug(string.format("%d", Opcode.SetRunMode))
	eq.debug(string.format("%d", Opcode.SetServerFilter))
	eq.debug(string.format("%d", Opcode.SetStartCity))
	eq.debug(string.format("%d", Opcode.SetTitle))
	eq.debug(string.format("%d", Opcode.SetTitleReply))
	eq.debug(string.format("%d", Opcode.SharedTaskPlayerList))
	eq.debug(string.format("%d", Opcode.Shielding))
	eq.debug(string.format("%d", Opcode.ShopDelItem))
	eq.debug(string.format("%d", Opcode.ShopEnd))
	eq.debug(string.format("%d", Opcode.ShopEndConfirm))
	eq.debug(string.format("%d", Opcode.ShopItem))
	eq.debug(string.format("%d", Opcode.ShopPlayerBuy))
	eq.debug(string.format("%d", Opcode.ShopPlayerSell))
	eq.debug(string.format("%d", Opcode.ShopRequest))
	eq.debug(string.format("%d", Opcode.SimpleMessage))
	eq.debug(string.format("%d", Opcode.SkillUpdate))
	eq.debug(string.format("%d", Opcode.Sneak))
	eq.debug(string.format("%d", Opcode.Some3ByteHPUpdate))
	eq.debug(string.format("%d", Opcode.Some6ByteHPUpdate))
	eq.debug(string.format("%d", Opcode.SomeItemPacketMaybe))
	eq.debug(string.format("%d", Opcode.Sound))
	eq.debug(string.format("%d", Opcode.SpawnAppearance))
	eq.debug(string.format("%d", Opcode.SpawnDoor))
	eq.debug(string.format("%d", Opcode.SpawnPositionUpdate))
	eq.debug(string.format("%d", Opcode.SpecialMesg))
	eq.debug(string.format("%d", Opcode.SpellEffect))
	eq.debug(string.format("%d", Opcode.Split))
	eq.debug(string.format("%d", Opcode.Stamina))
	eq.debug(string.format("%d", Opcode.Stun))
	eq.debug(string.format("%d", Opcode.Surname))
	eq.debug(string.format("%d", Opcode.SwapSpell))
	eq.debug(string.format("%d", Opcode.TGB))
	eq.debug(string.format("%d", Opcode.TargetBuffs))
	eq.debug(string.format("%d", Opcode.TargetCommand))
	eq.debug(string.format("%d", Opcode.TargetHoTT))
	eq.debug(string.format("%d", Opcode.TargetMouse))
	eq.debug(string.format("%d", Opcode.TargetReject))
	eq.debug(string.format("%d", Opcode.TaskActivity))
	eq.debug(string.format("%d", Opcode.TaskActivityComplete))
	eq.debug(string.format("%d", Opcode.TaskDescription))
	eq.debug(string.format("%d", Opcode.TaskHistoryReply))
	eq.debug(string.format("%d", Opcode.TaskHistoryRequest))
	eq.debug(string.format("%d", Opcode.TaskSelectWindow))
	eq.debug(string.format("%d", Opcode.Taunt))
	eq.debug(string.format("%d", Opcode.TestBuff))
	eq.debug(string.format("%d", Opcode.TimeOfDay))
	eq.debug(string.format("%d", Opcode.Track))
	eq.debug(string.format("%d", Opcode.TrackTarget))
	eq.debug(string.format("%d", Opcode.TrackUnknown))
	eq.debug(string.format("%d", Opcode.TradeAcceptClick))
	eq.debug(string.format("%d", Opcode.TradeBusy))
	eq.debug(string.format("%d", Opcode.TradeCoins))
	eq.debug(string.format("%d", Opcode.TradeMoneyUpdate))
	eq.debug(string.format("%d", Opcode.TradeRequest))
	eq.debug(string.format("%d", Opcode.TradeRequestAck))
	eq.debug(string.format("%d", Opcode.TradeSkillCombine))
	eq.debug(string.format("%d", Opcode.Trader))
	eq.debug(string.format("%d", Opcode.TraderBuy))
	eq.debug(string.format("%d", Opcode.TraderDelItem))
	eq.debug(string.format("%d", Opcode.TraderItemUpdate))
	eq.debug(string.format("%d", Opcode.TraderShop))
	eq.debug(string.format("%d", Opcode.Translocate))
	eq.debug(string.format("%d", Opcode.TributeInfo))
	eq.debug(string.format("%d", Opcode.TributeItem))
	eq.debug(string.format("%d", Opcode.TributeMoney))
	eq.debug(string.format("%d", Opcode.TributeNPC))
	eq.debug(string.format("%d", Opcode.TributePointUpdate))
	eq.debug(string.format("%d", Opcode.TributeTimer))
	eq.debug(string.format("%d", Opcode.TributeToggle))
	eq.debug(string.format("%d", Opcode.TributeUpdate))
	eq.debug(string.format("%d", Opcode.Untargetable))
	eq.debug(string.format("%d", Opcode.UpdateAA))
	eq.debug(string.format("%d", Opcode.UpdateLeadershipAA))
	eq.debug(string.format("%d", Opcode.VetClaimReply))
	eq.debug(string.format("%d", Opcode.VetClaimRequest))
	eq.debug(string.format("%d", Opcode.VetRewardsAvaliable))
	eq.debug(string.format("%d", Opcode.VoiceMacroIn))
	eq.debug(string.format("%d", Opcode.VoiceMacroOut))
	eq.debug(string.format("%d", Opcode.WeaponEquip1))
	eq.debug(string.format("%d", Opcode.WearChange))
	eq.debug(string.format("%d", Opcode.Weather))
	eq.debug(string.format("%d", Opcode.Weblink))
	eq.debug(string.format("%d", Opcode.WhoAllRequest))
	eq.debug(string.format("%d", Opcode.WhoAllResponse))
	eq.debug(string.format("%d", Opcode.WorldClientReady))
	eq.debug(string.format("%d", Opcode.WorldComplete))
	eq.debug(string.format("%d", Opcode.WorldLogout))
	eq.debug(string.format("%d", Opcode.WorldObjectsSent))
	eq.debug(string.format("%d", Opcode.WorldUnknown001))
	eq.debug(string.format("%d", Opcode.World_Client_CRC1))
	eq.debug(string.format("%d", Opcode.World_Client_CRC2))
	eq.debug(string.format("%d", Opcode.XTargetAutoAddHaters))
	eq.debug(string.format("%d", Opcode.XTargetRequest))
	eq.debug(string.format("%d", Opcode.XTargetResponse))
	eq.debug(string.format("%d", Opcode.YellForHelp))
	eq.debug(string.format("%d", Opcode.ZoneChange))
	eq.debug(string.format("%d", Opcode.ZoneComplete))
	eq.debug(string.format("%d", Opcode.ZoneEntry))
	eq.debug(string.format("%d", Opcode.ZoneGuildList))
	eq.debug(string.format("%d", Opcode.ZoneInUnknown))
	eq.debug(string.format("%d", Opcode.ZonePlayerToBind))
	eq.debug(string.format("%d", Opcode.ZoneServerInfo))
	eq.debug(string.format("%d", Opcode.ZoneServerReady))
	eq.debug(string.format("%d", Opcode.ZoneSpawns))
	eq.debug(string.format("%d", Opcode.ZoneUnavail))
	eq.debug(string.format("%d", SpeakMode.Emote))
	eq.debug(string.format("%d", SpeakMode.EmoteAlt))
	eq.debug(string.format("%d", SpeakMode.Group))
	eq.debug(string.format("%d", SpeakMode.Raw))
	eq.debug(string.format("%d", SpeakMode.Say))
	eq.debug(string.format("%d", SpeakMode.Shout))
	eq.debug(string.format("%d", SpecialAbility.allow_beneficial))
	eq.debug(string.format("%d", SpecialAbility.allow_to_tank))
	eq.debug(string.format("%d", SpecialAbility.always_flee))
	eq.debug(string.format("%d", SpecialAbility.area_rampage))
	eq.debug(string.format("%d", SpecialAbility.bane_attack))
	eq.debug(string.format("%d", SpecialAbility.casting_resist_diff))
	eq.debug(string.format("%d", SpecialAbility.counter_avoid_damage))
	eq.debug(string.format("%d", SpecialAbility.destructible_object))
	eq.debug(string.format("%d", SpecialAbility.disable_melee))
	eq.debug(string.format("%d", SpecialAbility.dont_buff_friends))
	eq.debug(string.format("%d", SpecialAbility.enrage))
	eq.debug(string.format("%d", SpecialAbility.flee_percent))
	eq.debug(string.format("%d", SpecialAbility.flurry))
	eq.debug(string.format("%d", SpecialAbility.ignore_root_aggro_rules))
	eq.debug(string.format("%d", SpecialAbility.immune_aggro))
	eq.debug(string.format("%d", SpecialAbility.immune_aggro_bot))
	eq.debug(string.format("%d", SpecialAbility.immune_aggro_client))
	eq.debug(string.format("%d", SpecialAbility.immune_aggro_npc))
	eq.debug(string.format("%d", SpecialAbility.immune_aggro_on))
	eq.debug(string.format("%d", SpecialAbility.immune_assassinate))
	eq.debug(string.format("%d", SpecialAbility.immune_casting_from_range))
	eq.debug(string.format("%d", SpecialAbility.immune_damage_bot))
	eq.debug(string.format("%d", SpecialAbility.immune_damage_client))
	eq.debug(string.format("%d", SpecialAbility.immune_damage_npc))
	eq.debug(string.format("%d", SpecialAbility.immune_feign_death))
	eq.debug(string.format("%d", SpecialAbility.immune_fleeing))
	eq.debug(string.format("%d", SpecialAbility.immune_headshot))
	eq.debug(string.format("%d", SpecialAbility.immune_magic))
	eq.debug(string.format("%d", SpecialAbility.immune_melee))
	eq.debug(string.format("%d", SpecialAbility.immune_melee_except_bane))
	eq.debug(string.format("%d", SpecialAbility.immune_melee_except_magical))
	eq.debug(string.format("%d", SpecialAbility.immune_open))
	eq.debug(string.format("%d", SpecialAbility.immune_pacify))
	eq.debug(string.format("%d", SpecialAbility.immune_ranged_attacks))
	eq.debug(string.format("%d", SpecialAbility.immune_taunt))
	eq.debug(string.format("%d", SpecialAbility.innate_dual_wield))
	eq.debug(string.format("%d", SpecialAbility.leash))
	eq.debug(string.format("%d", SpecialAbility.magical_attack))
	eq.debug(string.format("%d", SpecialAbility.modify_avoid_damage))
	eq.debug(string.format("%d", SpecialAbility.no_harm_from_client))
	eq.debug(string.format("%d", SpecialAbility.npc_chase_distance))
	eq.debug(string.format("%d", SpecialAbility.quad_attack))
	eq.debug(string.format("%d", SpecialAbility.rampage))
	eq.debug(string.format("%d", SpecialAbility.ranged_attack))
	eq.debug(string.format("%d", SpecialAbility.summon))
	eq.debug(string.format("%d", SpecialAbility.tether))
	eq.debug(string.format("%d", SpecialAbility.triple_attack))
	eq.debug(string.format("%d", SpecialAbility.tunnelvision))
	eq.debug(string.format("%d", SpecialAbility.uncharmable))
	eq.debug(string.format("%d", SpecialAbility.undispellable))
	eq.debug(string.format("%d", SpecialAbility.unfearable))
	eq.debug(string.format("%d", SpecialAbility.unmezable))
	eq.debug(string.format("%d", SpecialAbility.unslowable))
	eq.debug(string.format("%d", SpecialAbility.unsnareable))
	eq.debug(string.format("%d", SpecialAbility.unstunable))
	eq.debug(string.format("%d", Appearance.Crouching))
	eq.debug(string.format("%d", Appearance.Dead))
	eq.debug(string.format("%d", Appearance.Looting))
	eq.debug(string.format("%d", Appearance.Sitting))
	eq.debug(string.format("%d", Appearance.Standing))
	eq.debug(string.format("%d", BT.Animal))
	eq.debug(string.format("%d", BT.Atenha_Ra))
	eq.debug(string.format("%d", BT.Boxes))
	eq.debug(string.format("%d", BT.Construct))
	eq.debug(string.format("%d", BT.Dragon))
	eq.debug(string.format("%d", BT.Dragon3))
	eq.debug(string.format("%d", BT.Draz_Nurakk))
	eq.debug(string.format("%d", BT.Extraplanar))
	eq.debug(string.format("%d", BT.Giant))
	eq.debug(string.format("%d", BT.Greater_Akheva))
	eq.debug(string.format("%d", BT.Humanoid))
	eq.debug(string.format("%d", BT.Insect))
	eq.debug(string.format("%d", BT.InvisMan))
	eq.debug(string.format("%d", BT.Khati_Sha))
	eq.debug(string.format("%d", BT.Luggald))
	eq.debug(string.format("%d", BT.Lycanthrope))
	eq.debug(string.format("%d", BT.Magical))
	eq.debug(string.format("%d", BT.Monster))
	eq.debug(string.format("%d", BT.Muramite))
	eq.debug(string.format("%d", BT.NoTarget))
	eq.debug(string.format("%d", BT.NoTarget2))
	eq.debug(string.format("%d", BT.Plant))
	eq.debug(string.format("%d", BT.RaidGiant))
	eq.debug(string.format("%d", BT.Seru))
	eq.debug(string.format("%d", BT.Special))
	eq.debug(string.format("%d", BT.Summoned))
	eq.debug(string.format("%d", BT.Summoned2))
	eq.debug(string.format("%d", BT.Summoned3))
	eq.debug(string.format("%d", BT.SummonedUndead))
	eq.debug(string.format("%d", BT.SwarmPet))
	eq.debug(string.format("%d", BT.Undead))
	eq.debug(string.format("%d", BT.Vampire))
	eq.debug(string.format("%d", BT.VeliousDragon))
	eq.debug(string.format("%d", BT.Zek))
	eq.debug(string.format("%d", ClientVersion.RoF))
	eq.debug(string.format("%d", ClientVersion.RoF2))
	eq.debug(string.format("%d", ClientVersion.SoD))
	eq.debug(string.format("%d", ClientVersion.SoF))
	eq.debug(string.format("%d", ClientVersion.Titanium))
	eq.debug(string.format("%d", ClientVersion.UF))
	eq.debug(string.format("%d", ClientVersion.Underfoot))
	eq.debug(string.format("%d", ClientVersion.Unknown))
	eq.debug(string.format("%d", Event.aa_buy))
	eq.debug(string.format("%d", Event.aa_exp_gained))
	eq.debug(string.format("%d", Event.aa_gained))
	eq.debug(string.format("%d", Event.aa_loss))
	eq.debug(string.format("%d", Event.aggro_say))
	eq.debug(string.format("%d", Event.alt_currency_gain))
	eq.debug(string.format("%d", Event.alt_currency_loss))
	eq.debug(string.format("%d", Event.alt_currency_merchant_buy))
	eq.debug(string.format("%d", Event.alt_currency_merchant_sell))
	eq.debug(string.format("%d", Event.augment_insert))
	eq.debug(string.format("%d", Event.augment_insert_client))
	eq.debug(string.format("%d", Event.augment_item))
	eq.debug(string.format("%d", Event.augment_remove))
	eq.debug(string.format("%d", Event.augment_remove_client))
	eq.debug(string.format("%d", Event.bot_create))
	eq.debug(string.format("%d", Event.cast))
	eq.debug(string.format("%d", Event.cast_begin))
	eq.debug(string.format("%d", Event.cast_on))
	eq.debug(string.format("%d", Event.click_door))
	eq.debug(string.format("%d", Event.click_object))
	eq.debug(string.format("%d", Event.combat))
	eq.debug(string.format("%d", Event.combine_failure))
	eq.debug(string.format("%d", Event.combine_success))
	eq.debug(string.format("%d", Event.command))
	eq.debug(string.format("%d", Event.connect))
	eq.debug(string.format("%d", Event.consider))
	eq.debug(string.format("%d", Event.consider_corpse))
	eq.debug(string.format("%d", Event.crystal_gain))
	eq.debug(string.format("%d", Event.crystal_loss))
	eq.debug(string.format("%d", Event.damage_given))
	eq.debug(string.format("%d", Event.damage_taken))
	eq.debug(string.format("%d", Event.death))
	eq.debug(string.format("%d", Event.death_complete))
	eq.debug(string.format("%d", Event.death_zone))
	eq.debug(string.format("%d", Event.despawn))
	eq.debug(string.format("%d", Event.despawn_zone))
	eq.debug(string.format("%d", Event.destroy_item))
	eq.debug(string.format("%d", Event.destroy_item_client))
	eq.debug(string.format("%d", Event.disconnect))
	eq.debug(string.format("%d", Event.discover_item))
	eq.debug(string.format("%d", Event.drop_item))
	eq.debug(string.format("%d", Event.drop_item_client))
	eq.debug(string.format("%d", Event.duel_lose))
	eq.debug(string.format("%d", Event.duel_win))
	eq.debug(string.format("%d", Event.encounter_load))
	eq.debug(string.format("%d", Event.encounter_unload))
	eq.debug(string.format("%d", Event.enter))
	eq.debug(string.format("%d", Event.enter_area))
	eq.debug(string.format("%d", Event.enter_zone))
	eq.debug(string.format("%d", Event.entity_variable_delete))
	eq.debug(string.format("%d", Event.entity_variable_set))
	eq.debug(string.format("%d", Event.entity_variable_update))
	eq.debug(string.format("%d", Event.environmental_damage))
	eq.debug(string.format("%d", Event.equip_item))
	eq.debug(string.format("%d", Event.equip_item_bot))
	eq.debug(string.format("%d", Event.equip_item_client))
	eq.debug(string.format("%d", Event.exit))
	eq.debug(string.format("%d", Event.exp_gain))
	eq.debug(string.format("%d", Event.feign_death))
	eq.debug(string.format("%d", Event.fish_failure))
	eq.debug(string.format("%d", Event.fish_start))
	eq.debug(string.format("%d", Event.fish_success))
	eq.debug(string.format("%d", Event.forage_failure))
	eq.debug(string.format("%d", Event.forage_success))
	eq.debug(string.format("%d", Event.gm_command))
	eq.debug(string.format("%d", Event.group_change))
	eq.debug(string.format("%d", Event.hate_list))
	eq.debug(string.format("%d", Event.hp))
	eq.debug(string.format("%d", Event.inspect))
	eq.debug(string.format("%d", Event.item_click))
	eq.debug(string.format("%d", Event.item_click_cast))
	eq.debug(string.format("%d", Event.item_click_cast_client))
	eq.debug(string.format("%d", Event.item_click_client))
	eq.debug(string.format("%d", Event.item_enter_zone))
	eq.debug(string.format("%d", Event.killed_merit))
	eq.debug(string.format("%d", Event.language_skill_up))
	eq.debug(string.format("%d", Event.ldon_points_gain))
	eq.debug(string.format("%d", Event.ldon_points_loss))
	eq.debug(string.format("%d", Event.leave_area))
	eq.debug(string.format("%d", Event.level_down))
	eq.debug(string.format("%d", Event.level_up))
	eq.debug(string.format("%d", Event.loot))
	eq.debug(string.format("%d", Event.loot_added))
	eq.debug(string.format("%d", Event.loot_zone))
	eq.debug(string.format("%d", Event.memorize_spell))
	eq.debug(string.format("%d", Event.merchant_buy))
	eq.debug(string.format("%d", Event.merchant_sell))
	eq.debug(string.format("%d", Event.payload))
	eq.debug(string.format("%d", Event.player_pickup))
	eq.debug(string.format("%d", Event.popup_response))
	eq.debug(string.format("%d", Event.proximity_say))
	eq.debug(string.format("%d", Event.say))
	eq.debug(string.format("%d", Event.scale_calc))
	eq.debug(string.format("%d", Event.scribe_spell))
	eq.debug(string.format("%d", Event.signal))
	eq.debug(string.format("%d", Event.skill_up))
	eq.debug(string.format("%d", Event.slay))
	eq.debug(string.format("%d", Event.spawn))
	eq.debug(string.format("%d", Event.spawn_zone))
	eq.debug(string.format("%d", Event.spell_buff_tic))
	eq.debug(string.format("%d", Event.spell_effect))
	eq.debug(string.format("%d", Event.spell_effect_translocate_complete))
	eq.debug(string.format("%d", Event.spell_fade))
	eq.debug(string.format("%d", Event.target_change))
	eq.debug(string.format("%d", Event.task_accepted))
	eq.debug(string.format("%d", Event.task_before_update))
	eq.debug(string.format("%d", Event.task_complete))
	eq.debug(string.format("%d", Event.task_fail))
	eq.debug(string.format("%d", Event.task_stage_complete))
	eq.debug(string.format("%d", Event.task_update))
	eq.debug(string.format("%d", Event.test_buff))
	eq.debug(string.format("%d", Event.tick))
	eq.debug(string.format("%d", Event.timer))
	eq.debug(string.format("%d", Event.timer_pause))
	eq.debug(string.format("%d", Event.timer_resume))
	eq.debug(string.format("%d", Event.timer_start))
	eq.debug(string.format("%d", Event.timer_stop))
	eq.debug(string.format("%d", Event.trade))
	eq.debug(string.format("%d", Event.unaugment_item))
	eq.debug(string.format("%d", Event.unequip_item))
	eq.debug(string.format("%d", Event.unequip_item_bot))
	eq.debug(string.format("%d", Event.unequip_item_client))
	eq.debug(string.format("%d", Event.unhandled_opcode))
	eq.debug(string.format("%d", Event.unmemorize_spell))
	eq.debug(string.format("%d", Event.unscribe_spell))
	eq.debug(string.format("%d", Event.use_skill))
	eq.debug(string.format("%d", Event.warp))
	eq.debug(string.format("%d", Event.waypoint_arrive))
	eq.debug(string.format("%d", Event.waypoint_depart))
	eq.debug(string.format("%d", Event.weapon_proc))
	eq.debug(string.format("%d", Event.zone))
	eq.debug(string.format("%d", MT.Auction))
	eq.debug(string.format("%d", MT.AuctionEcho))
	eq.debug(string.format("%d", MT.Black))
	eq.debug(string.format("%d", MT.Blue))
	eq.debug(string.format("%d", MT.BrightBlue))
	eq.debug(string.format("%d", MT.Broadcasts))
	eq.debug(string.format("%d", MT.Channel1))
	eq.debug(string.format("%d", MT.Channel10))
	eq.debug(string.format("%d", MT.Channel2))
	eq.debug(string.format("%d", MT.Channel3))
	eq.debug(string.format("%d", MT.Channel4))
	eq.debug(string.format("%d", MT.Channel5))
	eq.debug(string.format("%d", MT.Channel6))
	eq.debug(string.format("%d", MT.Channel7))
	eq.debug(string.format("%d", MT.Channel8))
	eq.debug(string.format("%d", MT.Channel9))
	eq.debug(string.format("%d", MT.Chat))
	eq.debug(string.format("%d", MT.Chat10Echo))
	eq.debug(string.format("%d", MT.Chat1Echo))
	eq.debug(string.format("%d", MT.Chat2Echo))
	eq.debug(string.format("%d", MT.Chat3Echo))
	eq.debug(string.format("%d", MT.Chat4Echo))
	eq.debug(string.format("%d", MT.Chat5Echo))
	eq.debug(string.format("%d", MT.Chat6Echo))
	eq.debug(string.format("%d", MT.Chat7Echo))
	eq.debug(string.format("%d", MT.Chat8Echo))
	eq.debug(string.format("%d", MT.Chat9Echo))
	eq.debug(string.format("%d", MT.CritMelee))
	eq.debug(string.format("%d", MT.Cyan))
	eq.debug(string.format("%d", MT.DS))
	eq.debug(string.format("%d", MT.DarkGray))
	eq.debug(string.format("%d", MT.Default))
	eq.debug(string.format("%d", MT.DefaultText))
	eq.debug(string.format("%d", MT.DiceRoll))
	eq.debug(string.format("%d", MT.DimGray))
	eq.debug(string.format("%d", MT.Disciplines))
	eq.debug(string.format("%d", MT.DoTDamage))
	eq.debug(string.format("%d", MT.Emote))
	eq.debug(string.format("%d", MT.EmoteEcho))
	eq.debug(string.format("%d", MT.Experience))
	eq.debug(string.format("%d", MT.FocusEffect))
	eq.debug(string.format("%d", MT.Gray))
	eq.debug(string.format("%d", MT.Green))
	eq.debug(string.format("%d", MT.Group))
	eq.debug(string.format("%d", MT.GroupEcho))
	eq.debug(string.format("%d", MT.Guild))
	eq.debug(string.format("%d", MT.GuildEcho))
	eq.debug(string.format("%d", MT.ItemLink))
	eq.debug(string.format("%d", MT.ItemSpeech))
	eq.debug(string.format("%d", MT.Leadership))
	eq.debug(string.format("%d", MT.LightBlue))
	eq.debug(string.format("%d", MT.LightGray))
	eq.debug(string.format("%d", MT.LightNavy))
	eq.debug(string.format("%d", MT.Lime))
	eq.debug(string.format("%d", MT.LootMessages))
	eq.debug(string.format("%d", MT.Magenta))
	eq.debug(string.format("%d", MT.MerchantBuySell))
	eq.debug(string.format("%d", MT.MerchantOffer))
	eq.debug(string.format("%d", MT.MoneySplit))
	eq.debug(string.format("%d", MT.MyPet))
	eq.debug(string.format("%d", MT.NPCEnrage))
	eq.debug(string.format("%d", MT.NPCFlurry))
	eq.debug(string.format("%d", MT.NPCQuestSay))
	eq.debug(string.format("%d", MT.NPCRampage))
	eq.debug(string.format("%d", MT.NonMelee))
	eq.debug(string.format("%d", MT.OOC))
	eq.debug(string.format("%d", MT.OOCEcho))
	eq.debug(string.format("%d", MT.OtherDeath))
	eq.debug(string.format("%d", MT.OtherHits))
	eq.debug(string.format("%d", MT.OtherHitsYou))
	eq.debug(string.format("%d", MT.OtherMisses))
	eq.debug(string.format("%d", MT.OtherMissesYou))
	eq.debug(string.format("%d", MT.OtherSpells))
	eq.debug(string.format("%d", MT.PetCrit))
	eq.debug(string.format("%d", MT.PetFlurry))
	eq.debug(string.format("%d", MT.PetResponse))
	eq.debug(string.format("%d", MT.PetSpell))
	eq.debug(string.format("%d", MT.RaidSay))
	eq.debug(string.format("%d", MT.Red))
	eq.debug(string.format("%d", MT.Say))
	eq.debug(string.format("%d", MT.SayEcho))
	eq.debug(string.format("%d", MT.Shout))
	eq.debug(string.format("%d", MT.ShoutECho))
	eq.debug(string.format("%d", MT.Skills))
	eq.debug(string.format("%d", MT.SpellCrits))
	eq.debug(string.format("%d", MT.SpellFailure))
	eq.debug(string.format("%d", MT.Spells))
	eq.debug(string.format("%d", MT.StrikeThrough))
	eq.debug(string.format("%d", MT.Stun))
	eq.debug(string.format("%d", MT.System))
	eq.debug(string.format("%d", MT.Tell))
	eq.debug(string.format("%d", MT.TellEcho))
	eq.debug(string.format("%d", MT.TooFarAway))
	eq.debug(string.format("%d", MT.Unused1))
	eq.debug(string.format("%d", MT.Unused2))
	eq.debug(string.format("%d", MT.White))
	eq.debug(string.format("%d", MT.Who))
	eq.debug(string.format("%d", MT.WornOff))
	eq.debug(string.format("%d", MT.YellForHelp))
	eq.debug(string.format("%d", MT.Yellow))
	eq.debug(string.format("%d", MT.YouHitOther))
	eq.debug(string.format("%d", MT.YouMissOther))
	eq.debug(string.format("%d", MT.YourDeath))
	eq.debug(string.format("%d", JournalMode.Log1))
	eq.debug(string.format("%d", JournalMode.Log2))
	eq.debug(string.format("%d", JournalMode.None))
	eq.debug(string.format("%d", Language.Alaran))
	eq.debug(string.format("%d", Language.Barbarian))
	eq.debug(string.format("%d", Language.CombineTongue))
	eq.debug(string.format("%d", Language.CommonTongue))
	eq.debug(string.format("%d", Language.DarkElvish))
	eq.debug(string.format("%d", Language.DarkSpeech))
	eq.debug(string.format("%d", Language.Dragon))
	eq.debug(string.format("%d", Language.Dwarvish))
	eq.debug(string.format("%d", Language.ElderDragon))
	eq.debug(string.format("%d", Language.ElderElvish))
	eq.debug(string.format("%d", Language.ElderTeirDal))
	eq.debug(string.format("%d", Language.Elvish))
	eq.debug(string.format("%d", Language.Erudian))
	eq.debug(string.format("%d", Language.Faerie))
	eq.debug(string.format("%d", Language.Froglok))
	eq.debug(string.format("%d", Language.Gnoll))
	eq.debug(string.format("%d", Language.Gnomish))
	eq.debug(string.format("%d", Language.Goblin))
	eq.debug(string.format("%d", Language.Hadal))
	eq.debug(string.format("%d", Language.Halfling))
	eq.debug(string.format("%d", Language.Lizardman))
	eq.debug(string.format("%d", Language.MaxValue))
	eq.debug(string.format("%d", Language.Ogre))
	eq.debug(string.format("%d", Language.OldErudian))
	eq.debug(string.format("%d", Language.Orcish))
	eq.debug(string.format("%d", Language.ThievesCant))
	eq.debug(string.format("%d", Language.Troll))
	eq.debug(string.format("%d", Language.Unknown27))
	eq.debug(string.format("%d", Language.VahShir))
	eq.debug(string.format("%d", Material.Arms))
	eq.debug(string.format("%d", Material.Bracer))
	eq.debug(string.format("%d", Material.Chest))
	eq.debug(string.format("%d", Material.Count))
	eq.debug(string.format("%d", Material.Feet))
	eq.debug(string.format("%d", Material.Hands))
	eq.debug(string.format("%d", Material.Head))
	eq.debug(string.format("%d", Material.Invalid))
	eq.debug(string.format("%d", Material.Legs))
	eq.debug(string.format("%d", Material.Max))
	eq.debug(string.format("%d", Material.Primary))
	eq.debug(string.format("%d", Material.Secondary))
	eq.debug(string.format("%d", Material.Wrist))
	eq.debug(string.format("%d", Skill['1HBlunt']))
	eq.debug(string.format("%d", Skill['1HPiercing']))
	eq.debug(string.format("%d", Skill['1HSlashing']))
	eq.debug(string.format("%d", Skill['2HBlunt']))
	eq.debug(string.format("%d", Skill['2HPiercing']))
	eq.debug(string.format("%d", Skill['2HSlashing']))
	eq.debug(string.format("%d", Skill.Abjuration))
	eq.debug(string.format("%d", Skill.Alchemy))
	eq.debug(string.format("%d", Skill.AlcoholTolerance))
	eq.debug(string.format("%d", Skill.Alteration))
	eq.debug(string.format("%d", Skill.ApplyPoison))
	eq.debug(string.format("%d", Skill.Archery))
	eq.debug(string.format("%d", Skill.Backstab))
	eq.debug(string.format("%d", Skill.Baking))
	eq.debug(string.format("%d", Skill.Bash))
	eq.debug(string.format("%d", Skill.Begging))
	eq.debug(string.format("%d", Skill.Berserking))
	eq.debug(string.format("%d", Skill.BindWound))
	eq.debug(string.format("%d", Skill.Blacksmithing))
	eq.debug(string.format("%d", Skill.Block))
	eq.debug(string.format("%d", Skill.Blunt1H))
	eq.debug(string.format("%d", Skill.Blunt2H))
	eq.debug(string.format("%d", Skill.BrassInstruments))
	eq.debug(string.format("%d", Skill.Brewing))
	eq.debug(string.format("%d", Skill.Channeling))
	eq.debug(string.format("%d", Skill.Conjuration))
	eq.debug(string.format("%d", Skill.Defense))
	eq.debug(string.format("%d", Skill.Disarm))
	eq.debug(string.format("%d", Skill.DisarmTraps))
	eq.debug(string.format("%d", Skill.Divination))
	eq.debug(string.format("%d", Skill.Dodge))
	eq.debug(string.format("%d", Skill.DoubleAttack))
	eq.debug(string.format("%d", Skill.DragonPunch))
	eq.debug(string.format("%d", Skill.DualWield))
	eq.debug(string.format("%d", Skill.EagleStrike))
	eq.debug(string.format("%d", Skill.Evocation))
	eq.debug(string.format("%d", Skill.FeignDeath))
	eq.debug(string.format("%d", Skill.Fishing))
	eq.debug(string.format("%d", Skill.Fletching))
	eq.debug(string.format("%d", Skill.FlyingKick))
	eq.debug(string.format("%d", Skill.Forage))
	eq.debug(string.format("%d", Skill.Frenzy))
	eq.debug(string.format("%d", Skill.HIGHEST_SKILL))
	eq.debug(string.format("%d", Skill.HandtoHand))
	eq.debug(string.format("%d", Skill.Hide))
	eq.debug(string.format("%d", Skill.Intimidation))
	eq.debug(string.format("%d", Skill.JewelryMaking))
	eq.debug(string.format("%d", Skill.Kick))
	eq.debug(string.format("%d", Skill.MakePoison))
	eq.debug(string.format("%d", Skill.Meditate))
	eq.debug(string.format("%d", Skill.Mend))
	eq.debug(string.format("%d", Skill.Offense))
	eq.debug(string.format("%d", Skill.Parry))
	eq.debug(string.format("%d", Skill.PercussionInstruments))
	eq.debug(string.format("%d", Skill.PickLock))
	eq.debug(string.format("%d", Skill.PickPockets))
	eq.debug(string.format("%d", Skill.Piercing1H))
	eq.debug(string.format("%d", Skill.Piercing2H))
	eq.debug(string.format("%d", Skill.Pottery))
	eq.debug(string.format("%d", Skill.RemoveTraps))
	eq.debug(string.format("%d", Skill.Research))
	eq.debug(string.format("%d", Skill.Riposte))
	eq.debug(string.format("%d", Skill.RoundKick))
	eq.debug(string.format("%d", Skill.SafeFall))
	eq.debug(string.format("%d", Skill.SenseHeading))
	eq.debug(string.format("%d", Skill.SenseTraps))
	eq.debug(string.format("%d", Skill.Singing))
	eq.debug(string.format("%d", Skill.Slashing1H))
	eq.debug(string.format("%d", Skill.Slashing2H))
	eq.debug(string.format("%d", Skill.Sneak))
	eq.debug(string.format("%d", Skill.SpecializeAbjure))
	eq.debug(string.format("%d", Skill.SpecializeAlteration))
	eq.debug(string.format("%d", Skill.SpecializeConjuration))
	eq.debug(string.format("%d", Skill.SpecializeDivination))
	eq.debug(string.format("%d", Skill.SpecializeEvocation))
	eq.debug(string.format("%d", Skill.StringedInstruments))
	eq.debug(string.format("%d", Skill.Swimming))
	eq.debug(string.format("%d", Skill.TailRake))
	eq.debug(string.format("%d", Skill.Tailoring))
	eq.debug(string.format("%d", Skill.Taunt))
	eq.debug(string.format("%d", Skill.Throwing))
	eq.debug(string.format("%d", Skill.TigerClaw))
	eq.debug(string.format("%d", Skill.Tinkering))
	eq.debug(string.format("%d", Skill.Tracking))
	eq.debug(string.format("%d", Skill.TripleAttack))
	eq.debug(string.format("%d", Skill.WindInstruments))
	eq.debug(string.format("%d", Slot.Ammo))
	eq.debug(string.format("%d", Slot.Arms))
	eq.debug(string.format("%d", Slot.AugSocketBegin))
	eq.debug(string.format("%d", Slot.AugSocketEnd))
	eq.debug(string.format("%d", Slot.Augment))
	eq.debug(string.format("%d", Slot.Back))
	eq.debug(string.format("%d", Slot.BagSlotBegin))
	eq.debug(string.format("%d", Slot.BagSlotEnd))
	eq.debug(string.format("%d", Slot.BankBagsBegin))
	eq.debug(string.format("%d", Slot.BankBagsEnd))
	eq.debug(string.format("%d", Slot.BankBegin))
	eq.debug(string.format("%d", Slot.BankEnd))
	eq.debug(string.format("%d", Slot.Bracer1))
	eq.debug(string.format("%d", Slot.Bracer2))
	eq.debug(string.format("%d", Slot.Charm))
	eq.debug(string.format("%d", Slot.Chest))
	eq.debug(string.format("%d", Slot.Cursor))
	eq.debug(string.format("%d", Slot.CursorBagBegin))
	eq.debug(string.format("%d", Slot.CursorBagEnd))
	eq.debug(string.format("%d", Slot.CursorEnd))
	eq.debug(string.format("%d", Slot.Ear1))
	eq.debug(string.format("%d", Slot.Ear2))
	eq.debug(string.format("%d", Slot.EquipmentBegin))
	eq.debug(string.format("%d", Slot.EquipmentEnd))
	eq.debug(string.format("%d", Slot.Face))
	eq.debug(string.format("%d", Slot.Feet))
	eq.debug(string.format("%d", Slot.Finger1))
	eq.debug(string.format("%d", Slot.Finger2))
	eq.debug(string.format("%d", Slot.General1))
	eq.debug(string.format("%d", Slot.General10))
	eq.debug(string.format("%d", Slot.General10BagBegin))
	eq.debug(string.format("%d", Slot.General10BagEnd))
	eq.debug(string.format("%d", Slot.General1BagBegin))
	eq.debug(string.format("%d", Slot.General1BagEnd))
	eq.debug(string.format("%d", Slot.General2))
	eq.debug(string.format("%d", Slot.General2BagBegin))
	eq.debug(string.format("%d", Slot.General2BagEnd))
	eq.debug(string.format("%d", Slot.General3))
	eq.debug(string.format("%d", Slot.General3BagBegin))
	eq.debug(string.format("%d", Slot.General3BagEnd))
	eq.debug(string.format("%d", Slot.General4))
	eq.debug(string.format("%d", Slot.General4BagBegin))
	eq.debug(string.format("%d", Slot.General4BagEnd))
	eq.debug(string.format("%d", Slot.General5))
	eq.debug(string.format("%d", Slot.General5BagBegin))
	eq.debug(string.format("%d", Slot.General5BagEnd))
	eq.debug(string.format("%d", Slot.General6))
	eq.debug(string.format("%d", Slot.General6BagBegin))
	eq.debug(string.format("%d", Slot.General6BagEnd))
	eq.debug(string.format("%d", Slot.General7))
	eq.debug(string.format("%d", Slot.General7BagBegin))
	eq.debug(string.format("%d", Slot.General7BagEnd))
	eq.debug(string.format("%d", Slot.General8))
	eq.debug(string.format("%d", Slot.General8BagBegin))
	eq.debug(string.format("%d", Slot.General8BagEnd))
	eq.debug(string.format("%d", Slot.General9))
	eq.debug(string.format("%d", Slot.General9BagBegin))
	eq.debug(string.format("%d", Slot.General9BagEnd))
	eq.debug(string.format("%d", Slot.GeneralBagsBegin))
	eq.debug(string.format("%d", Slot.GeneralBagsEnd))
	eq.debug(string.format("%d", Slot.GeneralBegin))
	eq.debug(string.format("%d", Slot.GeneralEnd))
	eq.debug(string.format("%d", Slot.Hands))
	eq.debug(string.format("%d", Slot.Head))
	eq.debug(string.format("%d", Slot.Invalid))
	eq.debug(string.format("%d", Slot.Legs))
	eq.debug(string.format("%d", Slot.Neck))
	eq.debug(string.format("%d", Slot.PersonalBegin))
	eq.debug(string.format("%d", Slot.PersonalEnd))
	eq.debug(string.format("%d", Slot.PossessionsBagsBegin))
	eq.debug(string.format("%d", Slot.PossessionsBagsEnd))
	eq.debug(string.format("%d", Slot.PossessionsBegin))
	eq.debug(string.format("%d", Slot.PossessionsEnd))
	eq.debug(string.format("%d", Slot.PowerSource))
	eq.debug(string.format("%d", Slot.Primary))
	eq.debug(string.format("%d", Slot.Range))
	eq.debug(string.format("%d", Slot.Ring1))
	eq.debug(string.format("%d", Slot.Ring2))
	eq.debug(string.format("%d", Slot.Secondary))
	eq.debug(string.format("%d", Slot.SharedBankBagsBegin))
	eq.debug(string.format("%d", Slot.SharedBankBagsEnd))
	eq.debug(string.format("%d", Slot.SharedBankBegin))
	eq.debug(string.format("%d", Slot.SharedBankEnd))
	eq.debug(string.format("%d", Slot.Shoulder))
	eq.debug(string.format("%d", Slot.Shoulders))
	eq.debug(string.format("%d", Slot.Tradeskill))
	eq.debug(string.format("%d", Slot.Waist))
	eq.debug(string.format("%d", Slot.Wrist1))
	eq.debug(string.format("%d", Slot.Wrist2))
	eq.debug(string.format("%d", Class.ADVENTURE_MERCHANT))
	eq.debug(string.format("%d", Class.ADVENTURE_RECRUITER))
	eq.debug(string.format("%d", Class.ALT_CURRENCY_MERCHANT))
	eq.debug(string.format("%d", Class.BANKER))
	eq.debug(string.format("%d", Class.BARD))
	eq.debug(string.format("%d", Class.BARDGM))
	eq.debug(string.format("%d", Class.BEASTLORD))
	eq.debug(string.format("%d", Class.BEASTLORDGM))
	eq.debug(string.format("%d", Class.BERSERKER))
	eq.debug(string.format("%d", Class.BERSERKERGM))
	eq.debug(string.format("%d", Class.CLERIC))
	eq.debug(string.format("%d", Class.CLERICGM))
	eq.debug(string.format("%d", Class.DARK_REIGN_MERCHANT))
	eq.debug(string.format("%d", Class.DISCORD_MERCHANT))
	eq.debug(string.format("%d", Class.DRUID))
	eq.debug(string.format("%d", Class.DRUIDGM))
	eq.debug(string.format("%d", Class.ENCHANTER))
	eq.debug(string.format("%d", Class.ENCHANTERGM))
	eq.debug(string.format("%d", Class.FELLOWSHIP_MASTER))
	eq.debug(string.format("%d", Class.GUILD_BANKER))
	eq.debug(string.format("%d", Class.GUILD_TRIBUTE_MASTER))
	eq.debug(string.format("%d", Class.LDON_TREASURE))
	eq.debug(string.format("%d", Class.MAGICIAN))
	eq.debug(string.format("%d", Class.MAGICIANGM))
	eq.debug(string.format("%d", Class.MERCENARY_MASTER))
	eq.debug(string.format("%d", Class.MERCHANT))
	eq.debug(string.format("%d", Class.MONK))
	eq.debug(string.format("%d", Class.MONKGM))
	eq.debug(string.format("%d", Class.NECROMANCER))
	eq.debug(string.format("%d", Class.NECROMANCERGM))
	eq.debug(string.format("%d", Class.NORRATHS_KEEPERS_MERCHANT))
	eq.debug(string.format("%d", Class.PALADIN))
	eq.debug(string.format("%d", Class.PALADINGM))
	eq.debug(string.format("%d", Class.RANGER))
	eq.debug(string.format("%d", Class.RANGERGM))
	eq.debug(string.format("%d", Class.ROGUE))
	eq.debug(string.format("%d", Class.ROGUEGM))
	eq.debug(string.format("%d", Class.SHADOWKNIGHT))
	eq.debug(string.format("%d", Class.SHADOWKNIGHTGM))
	eq.debug(string.format("%d", Class.SHAMAN))
	eq.debug(string.format("%d", Class.SHAMANGM))
	eq.debug(string.format("%d", Class.TRIBUTE_MASTER))
	eq.debug(string.format("%d", Class.WARRIOR))
	eq.debug(string.format("%d", Class.WARRIORGM))
	eq.debug(string.format("%d", Class.WIZARD))
	eq.debug(string.format("%d", Class.WIZARDGM))
	eq.debug(string.format("%d", Faction.Ally))
	eq.debug(string.format("%d", Faction.Amiable))
	eq.debug(string.format("%d", Faction.Apprehensive))
	eq.debug(string.format("%d", Faction.Dubious))
	eq.debug(string.format("%d", Faction.Indifferent))
	eq.debug(string.format("%d", Faction.Kindly))
	eq.debug(string.format("%d", Faction.Scowls))
	eq.debug(string.format("%d", Faction.Threatenly))
	eq.debug(string.format("%d", Faction.Warmly))
	eq.debug(string.format("%d", Filter.Auctions))
	eq.debug(string.format("%d", Filter.BadWords))
	eq.debug(string.format("%d", Filter.BardSongs))
	eq.debug(string.format("%d", Filter.DOT))
	eq.debug(string.format("%d", Filter.DamageShields))
	eq.debug(string.format("%d", Filter.FocusEffects))
	eq.debug(string.format("%d", Filter.GroupChat))
	eq.debug(string.format("%d", Filter.GuildChat))
	eq.debug(string.format("%d", Filter.HealOverTime))
	eq.debug(string.format("%d", Filter.MeleeCrits))
	eq.debug(string.format("%d", Filter.MissedMe))
	eq.debug(string.format("%d", Filter.MyMisses))
	eq.debug(string.format("%d", Filter.NPCSpells))
	eq.debug(string.format("%d", Filter.None))
	eq.debug(string.format("%d", Filter.OOC))
	eq.debug(string.format("%d", Filter.OthersHit))
	eq.debug(string.format("%d", Filter.OthersMiss))
	eq.debug(string.format("%d", Filter.PCSpells))
	eq.debug(string.format("%d", Filter.PetHits))
	eq.debug(string.format("%d", Filter.PetMisses))
	eq.debug(string.format("%d", Filter.PetSpells))
	eq.debug(string.format("%d", Filter.Shouts))
	eq.debug(string.format("%d", Filter.Socials))
	eq.debug(string.format("%d", Filter.SpellCrits))
	eq.debug(string.format("%d", Filter.SpellDamage))
	eq.debug(string.format("%d", Filter.Unknown25))
	eq.debug(string.format("%d", Filter.Unknown26))
	eq.debug(string.format("%d", Filter.Unknown27))
	eq.debug(string.format("%d", Filter.Unknown28))
	eq.debug(string.format("%d", Rule.AAExpMultiplier))
	eq.debug(string.format("%d", Rule.AERampageMaxDistance))
	eq.debug(string.format("%d", Rule.AI_EngagedBeneficialOtherChance))
	eq.debug(string.format("%d", Rule.AI_EngagedBeneficialSelfChance))
	eq.debug(string.format("%d", Rule.AI_EngagedDetrimentalChance))
	eq.debug(string.format("%d", Rule.AI_EngagedNoSpellMaxRecast))
	eq.debug(string.format("%d", Rule.AI_EngagedNoSpellMinRecast))
	eq.debug(string.format("%d", Rule.AI_HealHPPct))
	eq.debug(string.format("%d", Rule.AI_IdleBeneficialChance))
	eq.debug(string.format("%d", Rule.AI_IdleNoSpellMaxRecast))
	eq.debug(string.format("%d", Rule.AI_IdleNoSpellMinRecast))
	eq.debug(string.format("%d", Rule.AI_PursueDetrimentalChance))
	eq.debug(string.format("%d", Rule.AI_PursueNoSpellMaxRecast))
	eq.debug(string.format("%d", Rule.AI_PursueNoSpellMinRecast))
	eq.debug(string.format("%d", Rule.AI_SpellCastFinishedFailRecast))
	eq.debug(string.format("%d", Rule.AOEMaxTargets))
	eq.debug(string.format("%d", Rule.ActiveInvSnapshots))
	eq.debug(string.format("%d", Rule.AddMaxClientsPerIP))
	eq.debug(string.format("%d", Rule.AddMaxClientsStatus))
	eq.debug(string.format("%d", Rule.AdditiveBonusWornType))
	eq.debug(string.format("%d", Rule.AdjustProcPerMinute))
	eq.debug(string.format("%d", Rule.AggroPlayerPets))
	eq.debug(string.format("%d", Rule.AggroRadius))
	eq.debug(string.format("%d", Rule.AggroRadiusPuller))
	eq.debug(string.format("%d", Rule.AllowAnyWeaponTransformation))
	eq.debug(string.format("%d", Rule.AllowApplyPoisonCommand))
	eq.debug(string.format("%d", Rule.AllowApplyPotionCommand))
	eq.debug(string.format("%d", Rule.AllowBotEquipAnyRaceGear))
	eq.debug(string.format("%d", Rule.AllowCamelCaseNames))
	eq.debug(string.format("%d", Rule.AllowCorpse))
	eq.debug(string.format("%d", Rule.AllowCrossClassTrainers))
	eq.debug(string.format("%d", Rule.AllowCrossZoneSpellsOnBots))
	eq.debug(string.format("%d", Rule.AllowCrossZoneSpellsOnMercs))
	eq.debug(string.format("%d", Rule.AllowCrossZoneSpellsOnPets))
	eq.debug(string.format("%d", Rule.AllowDoubleInvis))
	eq.debug(string.format("%d", Rule.AllowExtraDmgSkill))
	eq.debug(string.format("%d", Rule.AllowItemTGB))
	eq.debug(string.format("%d", Rule.AllowMQTarget))
	eq.debug(string.format("%d", Rule.AllowMercSuspendInCombat))
	eq.debug(string.format("%d", Rule.AllowMercs))
	eq.debug(string.format("%d", Rule.AllowMultipleOfSameAugment))
	eq.debug(string.format("%d", Rule.AllowOwnerOptionAutoDefend))
	eq.debug(string.format("%d", Rule.AllowPickpocketCommand))
	eq.debug(string.format("%d", Rule.AllowSpellMemorizeFromItem))
	eq.debug(string.format("%d", Rule.AllowTickPulling))
	eq.debug(string.format("%d", Rule.AllyFactionMinimum))
	eq.debug(string.format("%d", Rule.AlternateAugmentationSealer))
	eq.debug(string.format("%d", Rule.AlwaysNotifyNewLeaderOnChange))
	eq.debug(string.format("%d", Rule.AlwaysSendTargetsBuffs))
	eq.debug(string.format("%d", Rule.AmiablyFactionMinimum))
	eq.debug(string.format("%d", Rule.AnimalsOpenDoors))
	eq.debug(string.format("%d", Rule.Anims))
	eq.debug(string.format("%d", Rule.ApprehensivelyFactionMinimum))
	eq.debug(string.format("%d", Rule.ArcheryBonusLevelRequirement))
	eq.debug(string.format("%d", Rule.ArcheryBonusRequiresStationary))
	eq.debug(string.format("%d", Rule.ArcheryConsumesAmmo))
	eq.debug(string.format("%d", Rule.ArcheryCritDifficulty))
	eq.debug(string.format("%d", Rule.ArcheryNPCMultiplier))
	eq.debug(string.format("%d", Rule.AssassinateLevelRequirement))
	eq.debug(string.format("%d", Rule.AssassinateOnlyHumanoids))
	eq.debug(string.format("%d", Rule.AssistNoTargetSelf))
	eq.debug(string.format("%d", Rule.AttackCommandRange))
	eq.debug(string.format("%d", Rule.AuditTrail))
	eq.debug(string.format("%d", Rule.AutoGrantAAExpansion))
	eq.debug(string.format("%d", Rule.AutoInjectSaylinksToClientMessage))
	eq.debug(string.format("%d", Rule.AutoInjectSaylinksToSay))
	eq.debug(string.format("%d", Rule.AutoShutdownDelay))
	eq.debug(string.format("%d", Rule.AutosaveIntervalS))
	eq.debug(string.format("%d", Rule.AutosaveIntervalSeconds))
	eq.debug(string.format("%d", Rule.AvgDefProcsPerMinute))
	eq.debug(string.format("%d", Rule.AvgProcsPerMinute))
	eq.debug(string.format("%d", Rule.AvgSpellProcsPerMinute))
	eq.debug(string.format("%d", Rule.BackstabIgnoresBane))
	eq.debug(string.format("%d", Rule.BackstabIgnoresElemental))
	eq.debug(string.format("%d", Rule.BardAggroCap))
	eq.debug(string.format("%d", Rule.BardTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.BaseCritChance))
	eq.debug(string.format("%d", Rule.BaseCritRatio))
	eq.debug(string.format("%d", Rule.BaseHPRegenBonusRaces))
	eq.debug(string.format("%d", Rule.BaseImmunityLevel))
	eq.debug(string.format("%d", Rule.BaseInstrumentSoftCap))
	eq.debug(string.format("%d", Rule.BaseProcChance))
	eq.debug(string.format("%d", Rule.BaseRunSpeedCap))
	eq.debug(string.format("%d", Rule.BashACBonusDivisor))
	eq.debug(string.format("%d", Rule.BashTwoHanderUseShoulderAC))
	eq.debug(string.format("%d", Rule.BatchPlayerEventProcessChunkSize))
	eq.debug(string.format("%d", Rule.BatchPlayerEventProcessIntervalSeconds))
	eq.debug(string.format("%d", Rule.BeastlordTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.BeginCast))
	eq.debug(string.format("%d", Rule.BerserkerFrenzyEnd))
	eq.debug(string.format("%d", Rule.BerserkerFrenzyStart))
	eq.debug(string.format("%d", Rule.BerserkerTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.BindAnywhere))
	eq.debug(string.format("%d", Rule.BlueModifier))
	eq.debug(string.format("%d", Rule.BootHour))
	eq.debug(string.format("%d", Rule.BotCharacterLevel))
	eq.debug(string.format("%d", Rule.BotExpansionSettings))
	eq.debug(string.format("%d", Rule.BotGroupXP))
	eq.debug(string.format("%d", Rule.BotHealOnLevel))
	eq.debug(string.format("%d", Rule.BotLevelsWithOwner))
	eq.debug(string.format("%d", Rule.BotsCanClickItems))
	eq.debug(string.format("%d", Rule.BotsClickItemsMinLvl))
	eq.debug(string.format("%d", Rule.BreakFeignDeathWhenCastOn))
	eq.debug(string.format("%d", Rule.BreakSneakWhenCastOn))
	eq.debug(string.format("%d", Rule.BuffFriends))
	eq.debug(string.format("%d", Rule.BuffLevelRestrictions))
	eq.debug(string.format("%d", Rule.BuffsFadeOnDeath))
	eq.debug(string.format("%d", Rule.BuyCostMod))
	eq.debug(string.format("%d", Rule.CallOfTheHeroAggroClearDist))
	eq.debug(string.format("%d", Rule.CanClickMageEpicV1))
	eq.debug(string.format("%d", Rule.CanTakeNoDrop))
	eq.debug(string.format("%d", Rule.CanTakeQuestItems))
	eq.debug(string.format("%d", Rule.CasterStopMeleeLevel))
	eq.debug(string.format("%d", Rule.CazicTouchBotsOwner))
	eq.debug(string.format("%d", Rule.CazicTouchTargetsPetOwner))
	eq.debug(string.format("%d", Rule.ChaBonusMod))
	eq.debug(string.format("%d", Rule.ChaPenaltyMod))
	eq.debug(string.format("%d", Rule.ChannelsIgnoreNameFilter))
	eq.debug(string.format("%d", Rule.CharacterSelectExpansionSettings))
	eq.debug(string.format("%d", Rule.ChargeMercPurchaseCost))
	eq.debug(string.format("%d", Rule.ChargeMercUpkeepCost))
	eq.debug(string.format("%d", Rule.CharismaCharmDuration))
	eq.debug(string.format("%d", Rule.CharismaEffectiveness))
	eq.debug(string.format("%d", Rule.CharismaEffectivenessCap))
	eq.debug(string.format("%d", Rule.CharmAggroOverLevel))
	eq.debug(string.format("%d", Rule.CharmBreakCheckChance))
	eq.debug(string.format("%d", Rule.CharmDisablesSpecialAbilities))
	eq.debug(string.format("%d", Rule.CheckCursorEmptyWhenLooting))
	eq.debug(string.format("%d", Rule.CheckForWaterOnSendTo))
	eq.debug(string.format("%d", Rule.CheckForWaterWhenFishing))
	eq.debug(string.format("%d", Rule.ChooseLeaderCooldownTime))
	eq.debug(string.format("%d", Rule.Classic2HBAnimation))
	eq.debug(string.format("%d", Rule.ClassicMasterWu))
	eq.debug(string.format("%d", Rule.ClassicNPCBackstab))
	eq.debug(string.format("%d", Rule.ClassicTauntSystem))
	eq.debug(string.format("%d", Rule.ClassicTripleAttack))
	eq.debug(string.format("%d", Rule.ClassicTripleAttackChanceBerserker))
	eq.debug(string.format("%d", Rule.ClassicTripleAttackChanceMonk))
	eq.debug(string.format("%d", Rule.ClassicTripleAttackChanceRanger))
	eq.debug(string.format("%d", Rule.ClassicTripleAttackChanceWarrior))
	eq.debug(string.format("%d", Rule.ClearTempMerchantlist))
	eq.debug(string.format("%d", Rule.ClearXTargetDelay))
	eq.debug(string.format("%d", Rule.ClericInnateHealFocus))
	eq.debug(string.format("%d", Rule.ClericTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.ClientAggroCheckIdleInterval))
	eq.debug(string.format("%d", Rule.ClientAggroCheckMovingInterval))
	eq.debug(string.format("%d", Rule.ClientDataRate))
	eq.debug(string.format("%d", Rule.ClientLinkdeadMS))
	eq.debug(string.format("%d", Rule.ClientPetsUseOwnerNameInLastName))
	eq.debug(string.format("%d", Rule.ClientPositionUpdates))
	eq.debug(string.format("%d", Rule.ClientRemovalDelayMS))
	eq.debug(string.format("%d", Rule.CommandSpellRank))
	eq.debug(string.format("%d", Rule.CompoundLifetapHeals))
	eq.debug(string.format("%d", Rule.CompressZoneStream))
	eq.debug(string.format("%d", Rule.CorpseDecayTime))
	eq.debug(string.format("%d", Rule.CorpseOwnerOnlineTime))
	eq.debug(string.format("%d", Rule.CorpseResTime))
	eq.debug(string.format("%d", Rule.CorpseUnlockTimer))
	eq.debug(string.format("%d", Rule.CrashReporting))
	eq.debug(string.format("%d", Rule.CreationLimit))
	eq.debug(string.format("%d", Rule.CriticalDamage))
	eq.debug(string.format("%d", Rule.CriticallyWoundedAggroMod))
	eq.debug(string.format("%d", Rule.CurrentExpansion))
	eq.debug(string.format("%d", Rule.CurrentTargetAggroMod))
	eq.debug(string.format("%d", Rule.DOTBonusDamageSplitOverDuration))
	eq.debug(string.format("%d", Rule.DOTsScaleWithSpellDmg))
	eq.debug(string.format("%d", Rule.DamageMessages))
	eq.debug(string.format("%d", Rule.DeathExpLossLevel))
	eq.debug(string.format("%d", Rule.DeathExpLossMaxLevel))
	eq.debug(string.format("%d", Rule.DeathExpLossMultiplier))
	eq.debug(string.format("%d", Rule.DeathItemLossLevel))
	eq.debug(string.format("%d", Rule.DeathKeepLevel))
	eq.debug(string.format("%d", Rule.DeathSaveCharismaMod))
	eq.debug(string.format("%d", Rule.DefProcPerMinAgiContrib))
	eq.debug(string.format("%d", Rule.DefaultGuild))
	eq.debug(string.format("%d", Rule.DefaultRampageTargets))
	eq.debug(string.format("%d", Rule.DefensiveProcPenaltyLevelGap))
	eq.debug(string.format("%d", Rule.DefensiveProcPenaltyLevelGapModifier))
	eq.debug(string.format("%d", Rule.DeleteTimer))
	eq.debug(string.format("%d", Rule.DeleteTransformationMold))
	eq.debug(string.format("%d", Rule.DialogueWindowAnimatesNPCsIfNoneSet))
	eq.debug(string.format("%d", Rule.DisableAttuneable))
	eq.debug(string.format("%d", Rule.DisableBardFocusEffects))
	eq.debug(string.format("%d", Rule.DisableLastNames))
	eq.debug(string.format("%d", Rule.DisableLore))
	eq.debug(string.format("%d", Rule.DisableNoDrop))
	eq.debug(string.format("%d", Rule.DisableNoPet))
	eq.debug(string.format("%d", Rule.DisableNoRent))
	eq.debug(string.format("%d", Rule.DisableNoTransfer))
	eq.debug(string.format("%d", Rule.DisablePotionBelt))
	eq.debug(string.format("%d", Rule.DisableSpellFocusEffects))
	eq.debug(string.format("%d", Rule.DismountWater))
	eq.debug(string.format("%d", Rule.DistanceForRescueAccept))
	eq.debug(string.format("%d", Rule.DistanceForRescueComplete))
	eq.debug(string.format("%d", Rule.DivineInterventionHeal))
	eq.debug(string.format("%d", Rule.DoubleBackstabLevelRequirement))
	eq.debug(string.format("%d", Rule.DragCorpseDistance))
	eq.debug(string.format("%d", Rule.DruidTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.DubiouslyFactionMinimum))
	eq.debug(string.format("%d", Rule.DuelCorpseResTime))
	eq.debug(string.format("%d", Rule.DyeCommandRequiresDyes))
	eq.debug(string.format("%d", Rule.EXPFromDmgShield))
	eq.debug(string.format("%d", Rule.EbonCrystalItemID))
	eq.debug(string.format("%d", Rule.Emote))
	eq.debug(string.format("%d", Rule.EmptyCorpseDecayTime))
	eq.debug(string.format("%d", Rule.EmptyNPCCorpseDecayTime))
	eq.debug(string.format("%d", Rule.EmptyShutdownDelaySeconds))
	eq.debug(string.format("%d", Rule.EmptyShutdownEnabled))
	eq.debug(string.format("%d", Rule.EnableAggroMeter))
	eq.debug(string.format("%d", Rule.EnableAltCurrencySell))
	eq.debug(string.format("%d", Rule.EnableAntiSpam))
	eq.debug(string.format("%d", Rule.EnableBardMelody))
	eq.debug(string.format("%d", Rule.EnableBlockedBuffs))
	eq.debug(string.format("%d", Rule.EnableCharacterEXPMods))
	eq.debug(string.format("%d", Rule.EnableChecksumVerification))
	eq.debug(string.format("%d", Rule.EnableDevTools))
	eq.debug(string.format("%d", Rule.EnableDiscoveredItems))
	eq.debug(string.format("%d", Rule.EnableFearPathing))
	eq.debug(string.format("%d", Rule.EnableFoodRequirement))
	eq.debug(string.format("%d", Rule.EnableGroupEXPModifier))
	eq.debug(string.format("%d", Rule.EnableGroupMemberEXPModifier))
	eq.debug(string.format("%d", Rule.EnableHungerPenalties))
	eq.debug(string.format("%d", Rule.EnableIPExemptions))
	eq.debug(string.format("%d", Rule.EnableInDynamicZoneStatus))
	eq.debug(string.format("%d", Rule.EnableLoggedOffReplenishments))
	eq.debug(string.format("%d", Rule.EnableMQFastMemDetector))
	eq.debug(string.format("%d", Rule.EnableMQGateDetector))
	eq.debug(string.format("%d", Rule.EnableMQGhostDetector))
	eq.debug(string.format("%d", Rule.EnableMQWarpDetector))
	eq.debug(string.format("%d", Rule.EnableMQZoneDetector))
	eq.debug(string.format("%d", Rule.EnableMailKeyIPVerification))
	eq.debug(string.format("%d", Rule.EnableMailSystem))
	eq.debug(string.format("%d", Rule.EnableMeritBasedFaction))
	eq.debug(string.format("%d", Rule.EnableNPCQuestJournal))
	eq.debug(string.format("%d", Rule.EnableRaidEXPModifier))
	eq.debug(string.format("%d", Rule.EnableRaidMemberEXPModifier))
	eq.debug(string.format("%d", Rule.EnableRangerAutoFire))
	eq.debug(string.format("%d", Rule.EnableResistSoftCap))
	eq.debug(string.format("%d", Rule.EnableReturnHomeButton))
	eq.debug(string.format("%d", Rule.EnableShadowrest))
	eq.debug(string.format("%d", Rule.EnableSneakPull))
	eq.debug(string.format("%d", Rule.EnableSpellBuckets))
	eq.debug(string.format("%d", Rule.EnableSpellGlobals))
	eq.debug(string.format("%d", Rule.EnableTGB))
	eq.debug(string.format("%d", Rule.EnableTaskProximity))
	eq.debug(string.format("%d", Rule.EnableTaskSystem))
	eq.debug(string.format("%d", Rule.EnableTestBuff))
	eq.debug(string.format("%d", Rule.EnableTutorialButton))
	eq.debug(string.format("%d", Rule.EnableVoiceMacros))
	eq.debug(string.format("%d", Rule.EnableWarpToTrader))
	eq.debug(string.format("%d", Rule.EnableWarriorShielding))
	eq.debug(string.format("%d", Rule.EnableXTargetting))
	eq.debug(string.format("%d", Rule.EnableZoneControllerGlobals))
	eq.debug(string.format("%d", Rule.Enabled))
	eq.debug(string.format("%d", Rule.EnchanterTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.EnduranceRegenMultiplier))
	eq.debug(string.format("%d", Rule.EnforceAugmentRestriction))
	eq.debug(string.format("%d", Rule.EnforceAugmentUsability))
	eq.debug(string.format("%d", Rule.EnforceAugmentWear))
	eq.debug(string.format("%d", Rule.EnforceCharacterLimitAtLogin))
	eq.debug(string.format("%d", Rule.EnvironmentDamageMulipliter))
	eq.debug(string.format("%d", Rule.EvacClearAggroInSameZone))
	eq.debug(string.format("%d", Rule.EvacClearCharmPet))
	eq.debug(string.format("%d", Rule.ExemptMaxClientsStatus))
	eq.debug(string.format("%d", Rule.ExpMultiplier))
	eq.debug(string.format("%d", Rule.ExpPerPoint))
	eq.debug(string.format("%d", Rule.ExpRewardsIgnoreLevelBasedEXPMods))
	eq.debug(string.format("%d", Rule.ExpansionSettings))
	eq.debug(string.format("%d", Rule.ExperiencePercentCapPerKill))
	eq.debug(string.format("%d", Rule.ExpireRead))
	eq.debug(string.format("%d", Rule.ExpireTrash))
	eq.debug(string.format("%d", Rule.ExpireUnread))
	eq.debug(string.format("%d", Rule.ExtraAllowedKickClassesBitmask))
	eq.debug(string.format("%d", Rule.FRProjectileItem_NPC))
	eq.debug(string.format("%d", Rule.FRProjectileItem_SOF))
	eq.debug(string.format("%d", Rule.FRProjectileItem_Titanium))
	eq.debug(string.format("%d", Rule.FVNoDropFlag))
	eq.debug(string.format("%d", Rule.Fear))
	eq.debug(string.format("%d", Rule.FearBreakCheckChance))
	eq.debug(string.format("%d", Rule.FeignKillsPet))
	eq.debug(string.format("%d", Rule.FinalExpMultiplier))
	eq.debug(string.format("%d", Rule.FinalRaidExpMultiplier))
	eq.debug(string.format("%d", Rule.Find))
	eq.debug(string.format("%d", Rule.FindBestZHeightAdjust))
	eq.debug(string.format("%d", Rule.FinishBuffing))
	eq.debug(string.format("%d", Rule.FinishingBlowOnlyWhenFleeing))
	eq.debug(string.format("%d", Rule.FishingChance))
	eq.debug(string.format("%d", Rule.FishingLineLength))
	eq.debug(string.format("%d", Rule.FishingLineStepSize))
	eq.debug(string.format("%d", Rule.FishingRodLength))
	eq.debug(string.format("%d", Rule.FixBeaconHeading))
	eq.debug(string.format("%d", Rule.FixPathingZMaxDeltaSendTo))
	eq.debug(string.format("%d", Rule.FixPathingZOnSendTo))
	eq.debug(string.format("%d", Rule.FixZWhenPathing))
	eq.debug(string.format("%d", Rule.FlatItemExtraSpellAmt))
	eq.debug(string.format("%d", Rule.FleeGray))
	eq.debug(string.format("%d", Rule.FleeGrayHPRatio))
	eq.debug(string.format("%d", Rule.FleeGrayMaxLevel))
	eq.debug(string.format("%d", Rule.FleeHPRatio))
	eq.debug(string.format("%d", Rule.FleeIfNotAlone))
	eq.debug(string.format("%d", Rule.FocusCombatProcs))
	eq.debug(string.format("%d", Rule.FoodLossPerUpdate))
	eq.debug(string.format("%d", Rule.ForageChance))
	eq.debug(string.format("%d", Rule.FrontalStunImmunityClasses))
	eq.debug(string.format("%d", Rule.FrontalStunImmunityRaces))
	eq.debug(string.format("%d", Rule.FullEndurOnDeath))
	eq.debug(string.format("%d", Rule.FullGroupEXPModifier))
	eq.debug(string.format("%d", Rule.FullManaOnDeath))
	eq.debug(string.format("%d", Rule.GMAccountIPList))
	eq.debug(string.format("%d", Rule.GlobalChatLevelLimit))
	eq.debug(string.format("%d", Rule.GlobalLootMultiplier))
	eq.debug(string.format("%d", Rule.GrantHoTTOnCreate))
	eq.debug(string.format("%d", Rule.GraveyardTimeMS))
	eq.debug(string.format("%d", Rule.GreenModifier))
	eq.debug(string.format("%d", Rule.GroupBuffing))
	eq.debug(string.format("%d", Rule.GroupExpMultiplier))
	eq.debug(string.format("%d", Rule.GroupInvitesRequireTarget))
	eq.debug(string.format("%d", Rule.GroupMemberEXPModifier))
	eq.debug(string.format("%d", Rule.GuildHallExpirationDays))
	eq.debug(string.format("%d", Rule.HOTBonusHealingSplitOverDuration))
	eq.debug(string.format("%d", Rule.HOTsScaleWithHealAmt))
	eq.debug(string.format("%d", Rule.HPRegenMultiplier))
	eq.debug(string.format("%d", Rule.HarmTouchCritRatio))
	eq.debug(string.format("%d", Rule.HasteCap))
	eq.debug(string.format("%d", Rule.Hastev3Cap))
	eq.debug(string.format("%d", Rule.HeadshotOnlyHumanoids))
	eq.debug(string.format("%d", Rule.HealOnLevel))
	eq.debug(string.format("%d", Rule.HealRotationMaxMembers))
	eq.debug(string.format("%d", Rule.HealRotationMaxTargets))
	eq.debug(string.format("%d", Rule.HeroicAgilityMultiplier))
	eq.debug(string.format("%d", Rule.HeroicDexterityMultiplier))
	eq.debug(string.format("%d", Rule.HeroicIntelligenceIncreaseSpellDmgMultiplier))
	eq.debug(string.format("%d", Rule.HeroicIntelligenceMultiplier))
	eq.debug(string.format("%d", Rule.HeroicStaminaMultiplier))
	eq.debug(string.format("%d", Rule.HeroicStatsUseDataBucketsToScale))
	eq.debug(string.format("%d", Rule.HeroicStrengthMultiplier))
	eq.debug(string.format("%d", Rule.HeroicWisdomIncreaseHealAmtMultiplier))
	eq.debug(string.format("%d", Rule.HeroicWisdomMultiplier))
	eq.debug(string.format("%d", Rule.HideMeCommandDisablesTells))
	eq.debug(string.format("%d", Rule.HitBoxMod))
	eq.debug(string.format("%d", Rule.HotZoneBonus))
	eq.debug(string.format("%d", Rule.IPExemptionZones))
	eq.debug(string.format("%d", Rule.IPLimitDisconnectAll))
	eq.debug(string.format("%d", Rule.IgnoreLevelBasedHasteCaps))
	eq.debug(string.format("%d", Rule.IgnoreSpellDmgLvlRestriction))
	eq.debug(string.format("%d", Rule.IksarCommonTongue))
	eq.debug(string.format("%d", Rule.IllusionsAlwaysPersist))
	eq.debug(string.format("%d", Rule.IndifferentlyFactionMinimum))
	eq.debug(string.format("%d", Rule.IntAggroThreshold))
	eq.debug(string.format("%d", Rule.IntervalDurationMS))
	eq.debug(string.format("%d", Rule.InvSnapshotHistoryD))
	eq.debug(string.format("%d", Rule.InvSnapshotMinIntervalM))
	eq.debug(string.format("%d", Rule.InvSnapshotMinRetryM))
	eq.debug(string.format("%d", Rule.InvisRequiresGroup))
	eq.debug(string.format("%d", Rule.IsGMPetitionWindowEnabled))
	eq.debug(string.format("%d", Rule.ItemATKCap))
	eq.debug(string.format("%d", Rule.ItemAccuracyCap))
	eq.debug(string.format("%d", Rule.ItemAvoidanceCap))
	eq.debug(string.format("%d", Rule.ItemCastsUseFocus))
	eq.debug(string.format("%d", Rule.ItemClairvoyanceCap))
	eq.debug(string.format("%d", Rule.ItemCombatEffectsCap))
	eq.debug(string.format("%d", Rule.ItemDSMitigationCap))
	eq.debug(string.format("%d", Rule.ItemDamageShieldCap))
	eq.debug(string.format("%d", Rule.ItemDoTShieldingCap))
	eq.debug(string.format("%d", Rule.ItemEnduranceRegenCap))
	eq.debug(string.format("%d", Rule.ItemExtraDmgCap))
	eq.debug(string.format("%d", Rule.ItemExtraSkillDamageCalcAsPercent))
	eq.debug(string.format("%d", Rule.ItemExtraSpellAmtCalcAsPercent))
	eq.debug(string.format("%d", Rule.ItemHealAmtCap))
	eq.debug(string.format("%d", Rule.ItemHealthRegenCap))
	eq.debug(string.format("%d", Rule.ItemIDToEnablePorts))
	eq.debug(string.format("%d", Rule.ItemManaRegenCap))
	eq.debug(string.format("%d", Rule.ItemShieldingCap))
	eq.debug(string.format("%d", Rule.ItemSpellDmgCap))
	eq.debug(string.format("%d", Rule.ItemSpellShieldingCap))
	eq.debug(string.format("%d", Rule.ItemStrikethroughCap))
	eq.debug(string.format("%d", Rule.ItemStunResistCap))
	eq.debug(string.format("%d", Rule.July242002PetResists))
	eq.debug(string.format("%d", Rule.Jun182014HundredHandsRevamp))
	eq.debug(string.format("%d", Rule.KarmaGlobalChatLimit))
	eq.debug(string.format("%d", Rule.KarmaUpdateIntervalMS))
	eq.debug(string.format("%d", Rule.KeepLevelOverMax))
	eq.debug(string.format("%d", Rule.KeepOneRecordPerCompletedTask))
	eq.debug(string.format("%d", Rule.KillProcessOnDynamicShutdown))
	eq.debug(string.format("%d", Rule.KillsPerGroupLeadershipAA))
	eq.debug(string.format("%d", Rule.KillsPerRaidLeadershipAA))
	eq.debug(string.format("%d", Rule.KindlyFactionMinimum))
	eq.debug(string.format("%d", Rule.LDoNBaseTrapDifficulty))
	eq.debug(string.format("%d", Rule.LDoNCriticalFailTrapThreshold))
	eq.debug(string.format("%d", Rule.LDoNLootCountModifier))
	eq.debug(string.format("%d", Rule.LDoNTrapDistanceUse))
	eq.debug(string.format("%d", Rule.LastFightingDelayMovingMax))
	eq.debug(string.format("%d", Rule.LastFightingDelayMovingMin))
	eq.debug(string.format("%d", Rule.LeashDistance))
	eq.debug(string.format("%d", Rule.LeaveCorpses))
	eq.debug(string.format("%d", Rule.LeaveCursorMoneyOnCorpse))
	eq.debug(string.format("%d", Rule.LeaveNakedCorpses))
	eq.debug(string.format("%d", Rule.LegacyManaburn))
	eq.debug(string.format("%d", Rule.LegacyManaburnCap))
	eq.debug(string.format("%d", Rule.LevelBasedEXPMods))
	eq.debug(string.format("%d", Rule.LevelToStopACTwinkControl))
	eq.debug(string.format("%d", Rule.LevelToStopDamageCaps))
	eq.debug(string.format("%d", Rule.LightBlueModifier))
	eq.debug(string.format("%d", Rule.LiveLikeEnrage))
	eq.debug(string.format("%d", Rule.LiveLikeFocusEffects))
	eq.debug(string.format("%d", Rule.LivelikeBreakCharmOnInvis))
	eq.debug(string.format("%d", Rule.LockoutDurationMultiplier))
	eq.debug(string.format("%d", Rule.MOTD))
	eq.debug(string.format("%d", Rule.MQFastMemExemptStatus))
	eq.debug(string.format("%d", Rule.MQGateExemptStatus))
	eq.debug(string.format("%d", Rule.MQGhostExemptStatus))
	eq.debug(string.format("%d", Rule.MQWarpDetectionDistanceFactor))
	eq.debug(string.format("%d", Rule.MQWarpExemptStatus))
	eq.debug(string.format("%d", Rule.MQZoneExemptStatus))
	eq.debug(string.format("%d", Rule.MagicianTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.MaintainIntoxicationAcrossZones))
	eq.debug(string.format("%d", Rule.MajorNPCCorpseDecayTime))
	eq.debug(string.format("%d", Rule.ManaRegen))
	eq.debug(string.format("%d", Rule.ManaRegenMultiplier))
	eq.debug(string.format("%d", Rule.ManaTapsOnAnyClass))
	eq.debug(string.format("%d", Rule.ManaTapsRequireNPCMana))
	eq.debug(string.format("%d", Rule.MarkMQWarpLT))
	eq.debug(string.format("%d", Rule.MarqueeHPUpdates))
	eq.debug(string.format("%d", Rule.MaxBarterSearchResults))
	eq.debug(string.format("%d", Rule.MaxBuffSlotsNPC))
	eq.debug(string.format("%d", Rule.MaxCharmDurationForPlayerCharacter))
	eq.debug(string.format("%d", Rule.MaxClientsPerIP))
	eq.debug(string.format("%d", Rule.MaxClientsSetByStatus))
	eq.debug(string.format("%d", Rule.MaxDiscSlotsNPC))
	eq.debug(string.format("%d", Rule.MaxDistanceToClickDoors))
	eq.debug(string.format("%d", Rule.MaxDraggedCorpses))
	eq.debug(string.format("%d", Rule.MaxExpLevel))
	eq.debug(string.format("%d", Rule.MaxFearDurationForPlayerCharacter))
	eq.debug(string.format("%d", Rule.MaxFlurryHits))
	eq.debug(string.format("%d", Rule.MaxLevel))
	eq.debug(string.format("%d", Rule.MaxLevelForTutorial))
	eq.debug(string.format("%d", Rule.MaxLevelRange))
	eq.debug(string.format("%d", Rule.MaxMessagesBeforeKick))
	eq.debug(string.format("%d", Rule.MaxNavmeshNodes))
	eq.debug(string.format("%d", Rule.MaxNumberForGroup))
	eq.debug(string.format("%d", Rule.MaxPermanentPlayerChannels))
	eq.debug(string.format("%d", Rule.MaxProcs))
	eq.debug(string.format("%d", Rule.MaxRaceID))
	eq.debug(string.format("%d", Rule.MaxRampageTargets))
	eq.debug(string.format("%d", Rule.MaxScalingProcAggro))
	eq.debug(string.format("%d", Rule.MaxSearchResults))
	eq.debug(string.format("%d", Rule.MaxSongSlotsNPC))
	eq.debug(string.format("%d", Rule.MaxTotalSlotsNPC))
	eq.debug(string.format("%d", Rule.MaxTotalSlotsPET))
	eq.debug(string.format("%d", Rule.MaxTradeskillSearchSkillDiff))
	eq.debug(string.format("%d", Rule.MaxTrainResearch))
	eq.debug(string.format("%d", Rule.MaxTrainSpecializations))
	eq.debug(string.format("%d", Rule.MaxTrainTradeskills))
	eq.debug(string.format("%d", Rule.MaximumMessagesPerInterval))
	eq.debug(string.format("%d", Rule.MaximumQuestErrors))
	eq.debug(string.format("%d", Rule.MaximumTauntDistance))
	eq.debug(string.format("%d", Rule.MeleeCritDifficulty))
	eq.debug(string.format("%d", Rule.MeleePush))
	eq.debug(string.format("%d", Rule.MeleePushChance))
	eq.debug(string.format("%d", Rule.MeleePushForceClientPercent))
	eq.debug(string.format("%d", Rule.MeleePushForcePetPercent))
	eq.debug(string.format("%d", Rule.MeleeRangeAggroMod))
	eq.debug(string.format("%d", Rule.MinAggroLevel))
	eq.debug(string.format("%d", Rule.MinGMAntiHackStatus))
	eq.debug(string.format("%d", Rule.MinHastedDelay))
	eq.debug(string.format("%d", Rule.MinNumberForGroup))
	eq.debug(string.format("%d", Rule.MinOfflineTimeToReplenishments))
	eq.debug(string.format("%d", Rule.MinOfflineTimeToReturnHome))
	eq.debug(string.format("%d", Rule.MinRangedAttackDist))
	eq.debug(string.format("%d", Rule.MinStatusForNoDropExemptions))
	eq.debug(string.format("%d", Rule.MinStatusToBypassAntiSpam))
	eq.debug(string.format("%d", Rule.MinStatusToBypassCheckSumVerification))
	eq.debug(string.format("%d", Rule.MinStatusToBypassLockedServer))
	eq.debug(string.format("%d", Rule.MinStatusToBypassPlayerCountRequirements))
	eq.debug(string.format("%d", Rule.MinStatusToLevelTarget))
	eq.debug(string.format("%d", Rule.MinStatusToSummonItem))
	eq.debug(string.format("%d", Rule.MinStatusToZoneAnywhere))
	eq.debug(string.format("%d", Rule.MinimumMessagesPerInterval))
	eq.debug(string.format("%d", Rule.MinorNPCCorpseDecayTime))
	eq.debug(string.format("%d", Rule.MobCloseScanDistance))
	eq.debug(string.format("%d", Rule.MobPathingVisualDebug))
	eq.debug(string.format("%d", Rule.MobZVisualDebug))
	eq.debug(string.format("%d", Rule.ModernAAScalingAALimit))
	eq.debug(string.format("%d", Rule.ModernAAScalingAAMinimum))
	eq.debug(string.format("%d", Rule.ModernAAScalingEnabled))
	eq.debug(string.format("%d", Rule.ModernAAScalingStartPercent))
	eq.debug(string.format("%d", Rule.MonkTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.NPCAggroMaxDistanceEnabled))
	eq.debug(string.format("%d", Rule.NPCAssistCap))
	eq.debug(string.format("%d", Rule.NPCAssistCapTimer))
	eq.debug(string.format("%d", Rule.NPCAttackMagicLevel))
	eq.debug(string.format("%d", Rule.NPCBackstabMod))
	eq.debug(string.format("%d", Rule.NPCBashKickLevel))
	eq.debug(string.format("%d", Rule.NPCBuffLevelRestrictions))
	eq.debug(string.format("%d", Rule.NPCCanCrit))
	eq.debug(string.format("%d", Rule.NPCFlurryChance))
	eq.debug(string.format("%d", Rule.NPCGateDistanceBind))
	eq.debug(string.format("%d", Rule.NPCGateNearBind))
	eq.debug(string.format("%d", Rule.NPCGatePercent))
	eq.debug(string.format("%d", Rule.NPCHealOnGate))
	eq.debug(string.format("%d", Rule.NPCHealOnGateAmount))
	eq.debug(string.format("%d", Rule.NPCIgnoreBaseImmunity))
	eq.debug(string.format("%d", Rule.NPCInnateProcOverride))
	eq.debug(string.format("%d", Rule.NPCSpellPush))
	eq.debug(string.format("%d", Rule.NPCToNPCAggroTimerMax))
	eq.debug(string.format("%d", Rule.NPCToNPCAggroTimerMin))
	eq.debug(string.format("%d", Rule.NPC_UseFocusFromItems))
	eq.debug(string.format("%d", Rule.NPC_UseFocusFromSpells))
	eq.debug(string.format("%d", Rule.NPCsUseFrontalStunImmunityClasses))
	eq.debug(string.format("%d", Rule.NPCsUseFrontalStunImmunityRaces))
	eq.debug(string.format("%d", Rule.NPCtoNPCPush))
	eq.debug(string.format("%d", Rule.NavmeshStepSize))
	eq.debug(string.format("%d", Rule.NecromancerTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.NewLevelScaling))
	eq.debug(string.format("%d", Rule.NoSkillsOnHorse))
	eq.debug(string.format("%d", Rule.NormalizedAAEnabled))
	eq.debug(string.format("%d", Rule.NormalizedAANumberOfWhiteConPerAA))
	eq.debug(string.format("%d", Rule.NumberKillsForBossSpawn))
	eq.debug(string.format("%d", Rule.OOCRegen))
	eq.debug(string.format("%d", Rule.OPClientUpdateVisualDebug))
	eq.debug(string.format("%d", Rule.OgreCommonTongue))
	eq.debug(string.format("%d", Rule.OldMinMana))
	eq.debug(string.format("%d", Rule.OldRaceRezEffects))
	eq.debug(string.format("%d", Rule.OldRainTargets))
	eq.debug(string.format("%d", Rule.OldResurrectionSicknessSpell))
	eq.debug(string.format("%d", Rule.OldResurrectionSicknessSpellID))
	eq.debug(string.format("%d", Rule.OnInviteReceiveAlreadyinGroupMessage))
	eq.debug(string.format("%d", Rule.OneProcPerWeapon))
	eq.debug(string.format("%d", Rule.PEQZoneDebuff1))
	eq.debug(string.format("%d", Rule.PEQZoneDebuff2))
	eq.debug(string.format("%d", Rule.PEQZoneHPRatio))
	eq.debug(string.format("%d", Rule.PEQZoneReuseTime))
	eq.debug(string.format("%d", Rule.PVPEnableGuardFactionAssist))
	eq.debug(string.format("%d", Rule.PVPMinLevel))
	eq.debug(string.format("%d", Rule.PVPSettings))
	eq.debug(string.format("%d", Rule.PaladinTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.PerCharacterBucketMaxLevel))
	eq.debug(string.format("%d", Rule.PerCharacterQglobalMaxLevel))
	eq.debug(string.format("%d", Rule.PeriodicCheckTimer))
	eq.debug(string.format("%d", Rule.PetAttackMagicLevel))
	eq.debug(string.format("%d", Rule.PetAttackRange))
	eq.debug(string.format("%d", Rule.PetBaseCritChance))
	eq.debug(string.format("%d", Rule.PetPowerLevelCap))
	eq.debug(string.format("%d", Rule.PetSpellAggroMod))
	eq.debug(string.format("%d", Rule.PetTauntRange))
	eq.debug(string.format("%d", Rule.PetZoneWithOwner))
	eq.debug(string.format("%d", Rule.PetsUseReagents))
	eq.debug(string.format("%d", Rule.PlayerCreationAllowed))
	eq.debug(string.format("%d", Rule.PlayerCreationLimit))
	eq.debug(string.format("%d", Rule.PlayerCreationRequiredLevel))
	eq.debug(string.format("%d", Rule.PlayerCreationRequiredStatus))
	eq.debug(string.format("%d", Rule.PlayerCreationRequiredTime))
	eq.debug(string.format("%d", Rule.PlayerDropItems))
	eq.debug(string.format("%d", Rule.PlayerEventsQSProcess))
	eq.debug(string.format("%d", Rule.PlayerLogAAPurchases))
	eq.debug(string.format("%d", Rule.PlayerLogAARate))
	eq.debug(string.format("%d", Rule.PlayerLogAlternateCurrencyTransactions))
	eq.debug(string.format("%d", Rule.PlayerLogChat))
	eq.debug(string.format("%d", Rule.PlayerLogConnectDisconnect))
	eq.debug(string.format("%d", Rule.PlayerLogDeaths))
	eq.debug(string.format("%d", Rule.PlayerLogDeletes))
	eq.debug(string.format("%d", Rule.PlayerLogHandins))
	eq.debug(string.format("%d", Rule.PlayerLogIssuedCommandes))
	eq.debug(string.format("%d", Rule.PlayerLogLevels))
	eq.debug(string.format("%d", Rule.PlayerLogMerchantTransactions))
	eq.debug(string.format("%d", Rule.PlayerLogMoves))
	eq.debug(string.format("%d", Rule.PlayerLogNPCKills))
	eq.debug(string.format("%d", Rule.PlayerLogQGlobalUpdate))
	eq.debug(string.format("%d", Rule.PlayerLogTaskUpdates))
	eq.debug(string.format("%d", Rule.PlayerLogTradeSkillEvents))
	eq.debug(string.format("%d", Rule.PlayerLogTrades))
	eq.debug(string.format("%d", Rule.PlayerLogZone))
	eq.debug(string.format("%d", Rule.PlayerTradingLoreFeedback))
	eq.debug(string.format("%d", Rule.PreNerfBardAEDoT))
	eq.debug(string.format("%d", Rule.PreferNoManaCommandSpells))
	eq.debug(string.format("%d", Rule.PreventFactionWarOnCharmBreak))
	eq.debug(string.format("%d", Rule.PreventMountsFromZoning))
	eq.debug(string.format("%d", Rule.PriceBonusPct))
	eq.debug(string.format("%d", Rule.PricePenaltyPct))
	eq.debug(string.format("%d", Rule.PrintFileFunctionAndLine))
	eq.debug(string.format("%d", Rule.ProcDexDivideBy))
	eq.debug(string.format("%d", Rule.ProcPerMinDexContrib))
	eq.debug(string.format("%d", Rule.ProcessFearedProximity))
	eq.debug(string.format("%d", Rule.ProjectileDmgOnImpact))
	eq.debug(string.format("%d", Rule.QuestDialogueUsesDialogueWindow))
	eq.debug(string.format("%d", Rule.QuestableSpawnLimit))
	eq.debug(string.format("%d", Rule.QuestsAutoReloadGlobalScripts))
	eq.debug(string.format("%d", Rule.QuestsRepopWhenPlayersNotInCombat))
	eq.debug(string.format("%d", Rule.QuestsRepopWithReload))
	eq.debug(string.format("%d", Rule.QuestsResetTimersWithReload))
	eq.debug(string.format("%d", Rule.QuiverHasteCap))
	eq.debug(string.format("%d", Rule.RadiantCrystalItemID))
	eq.debug(string.format("%d", Rule.RaidExpMultiplier))
	eq.debug(string.format("%d", Rule.RampageHitsTarget))
	eq.debug(string.format("%d", Rule.RangerTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.RecordBuyFromMerchant))
	eq.debug(string.format("%d", Rule.RecordCompletedOptionalActivities))
	eq.debug(string.format("%d", Rule.RecordCompletedTasks))
	eq.debug(string.format("%d", Rule.RecordSellToMerchant))
	eq.debug(string.format("%d", Rule.RecycleInstanceIds))
	eq.debug(string.format("%d", Rule.RedModifier))
	eq.debug(string.format("%d", Rule.ReflectMessagesClose))
	eq.debug(string.format("%d", Rule.ReflectType))
	eq.debug(string.format("%d", Rule.ReportingSystemActive))
	eq.debug(string.format("%d", Rule.RequestCooldownTimerSeconds))
	eq.debug(string.format("%d", Rule.RequireKeyOnCursor))
	eq.debug(string.format("%d", Rule.RequireMnemonicRetention))
	eq.debug(string.format("%d", Rule.RequireTomeHandin))
	eq.debug(string.format("%d", Rule.RequiredStatusAdmin))
	eq.debug(string.format("%d", Rule.RequiredStatusListAll))
	eq.debug(string.format("%d", Rule.ResendDelayBaseMS))
	eq.debug(string.format("%d", Rule.ResendDelayFactor))
	eq.debug(string.format("%d", Rule.ResendDelayMaxMS))
	eq.debug(string.format("%d", Rule.ResendDelayMinMS))
	eq.debug(string.format("%d", Rule.ReservedInstances))
	eq.debug(string.format("%d", Rule.ResistFalloff))
	eq.debug(string.format("%d", Rule.RespawnFromHover))
	eq.debug(string.format("%d", Rule.RespawnFromHoverTimer))
	eq.debug(string.format("%d", Rule.RestRegenEnabled))
	eq.debug(string.format("%d", Rule.RestRegenRaidTimeToActivate))
	eq.debug(string.format("%d", Rule.RestRegenTimeToActivate))
	eq.debug(string.format("%d", Rule.RestrictApplyPotionToRogue))
	eq.debug(string.format("%d", Rule.RestrictSpellScribing))
	eq.debug(string.format("%d", Rule.ResurrectRadius))
	eq.debug(string.format("%d", Rule.ResurrectionEffectBlock))
	eq.debug(string.format("%d", Rule.ResurrectionSickness))
	eq.debug(string.format("%d", Rule.ResurrectionSicknessSpell))
	eq.debug(string.format("%d", Rule.ResurrectionSicknessSpellID))
	eq.debug(string.format("%d", Rule.ReturnNonQuestNoDropItems))
	eq.debug(string.format("%d", Rule.ReturnQuestItemsFromNonQuestNPCs))
	eq.debug(string.format("%d", Rule.RogueTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.RootBreakCheckChance))
	eq.debug(string.format("%d", Rule.RootBreakFromSpells))
	eq.debug(string.format("%d", Rule.Rules))
	eq.debug(string.format("%d", Rule.SHDProcIDOffByOne))
	eq.debug(string.format("%d", Rule.SacrificeItemID))
	eq.debug(string.format("%d", Rule.SacrificeMaxLevel))
	eq.debug(string.format("%d", Rule.SacrificeMinLevel))
	eq.debug(string.format("%d", Rule.Say))
	eq.debug(string.format("%d", Rule.SayPauseTimeInSec))
	eq.debug(string.format("%d", Rule.ScaleRate))
	eq.debug(string.format("%d", Rule.SelfLanguageLearning))
	eq.debug(string.format("%d", Rule.SellCostMod))
	eq.debug(string.format("%d", Rule.SenseHeadingStartValue))
	eq.debug(string.format("%d", Rule.ServerWideAuction))
	eq.debug(string.format("%d", Rule.ServerWideOOC))
	eq.debug(string.format("%d", Rule.SessionTimeOut))
	eq.debug(string.format("%d", Rule.ShadowKnightTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.ShamanTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.SharedBankPlat))
	eq.debug(string.format("%d", Rule.SharedTasksTerminateTimerMS))
	eq.debug(string.format("%d", Rule.SharedTasksWorldProcessRate))
	eq.debug(string.format("%d", Rule.ShortMovementUpdateRange))
	eq.debug(string.format("%d", Rule.ShowExpValues))
	eq.debug(string.format("%d", Rule.SittingAggroMod))
	eq.debug(string.format("%d", Rule.SkillCapMaxLevel))
	eq.debug(string.format("%d", Rule.SkillUpFromItems))
	eq.debug(string.format("%d", Rule.SkillUpMaximumChancePercentage))
	eq.debug(string.format("%d", Rule.SkillUpMinimumChancePercentage))
	eq.debug(string.format("%d", Rule.SkillUpModifier))
	eq.debug(string.format("%d", Rule.SmartAggroList))
	eq.debug(string.format("%d", Rule.SmartLastFightingDelayMoving))
	eq.debug(string.format("%d", Rule.SneakPullAssistRange))
	eq.debug(string.format("%d", Rule.SoDClientUseSoDHPManaEnd))
	eq.debug(string.format("%d", Rule.SoFStartZoneID))
	eq.debug(string.format("%d", Rule.SoftDeletes))
	eq.debug(string.format("%d", Rule.SongMessages))
	eq.debug(string.format("%d", Rule.SoundForAAEarned))
	eq.debug(string.format("%d", Rule.SpawnEventMin))
	eq.debug(string.format("%d", Rule.SpawnLimit))
	eq.debug(string.format("%d", Rule.SpellAggroMod))
	eq.debug(string.format("%d", Rule.SpellMessages))
	eq.debug(string.format("%d", Rule.SpellParticles))
	eq.debug(string.format("%d", Rule.SpellResistSoftCap))
	eq.debug(string.format("%d", Rule.StartEnrageValue))
	eq.debug(string.format("%d", Rule.StartZoneSameAsBindOnCreation))
	eq.debug(string.format("%d", Rule.StatCap))
	eq.debug(string.format("%d", Rule.StunChance))
	eq.debug(string.format("%d", Rule.SuccorFailChance))
	eq.debug(string.format("%d", Rule.SummonMeleeRange))
	eq.debug(string.format("%d", Rule.SuppressCommandErrors))
	eq.debug(string.format("%d", Rule.SuspendIntervalMS))
	eq.debug(string.format("%d", Rule.SuspendIntervalS))
	eq.debug(string.format("%d", Rule.SwarmPetTargetLock))
	eq.debug(string.format("%d", Rule.SwimmingStartValue))
	eq.debug(string.format("%d", Rule.TargetsTargetRequiresCombatRange))
	eq.debug(string.format("%d", Rule.TauntChanceBonus))
	eq.debug(string.format("%d", Rule.TauntOverAggro))
	eq.debug(string.format("%d", Rule.TauntOverLevel))
	eq.debug(string.format("%d", Rule.TauntSkillFalloff))
	eq.debug(string.format("%d", Rule.TellQueueSize))
	eq.debug(string.format("%d", Rule.ThreateninglyFactionMinimum))
	eq.debug(string.format("%d", Rule.ThrowingConsumesAmmo))
	eq.debug(string.format("%d", Rule.ThrowingCritDifficulty))
	eq.debug(string.format("%d", Rule.TitaniumStartZoneID))
	eq.debug(string.format("%d", Rule.TrackingAutoRefreshSkillUps))
	eq.debug(string.format("%d", Rule.TradeSkillClamp))
	eq.debug(string.format("%d", Rule.TradeskillUpAlchemy))
	eq.debug(string.format("%d", Rule.TradeskillUpBaking))
	eq.debug(string.format("%d", Rule.TradeskillUpBlacksmithing))
	eq.debug(string.format("%d", Rule.TradeskillUpBrewing))
	eq.debug(string.format("%d", Rule.TradeskillUpFletching))
	eq.debug(string.format("%d", Rule.TradeskillUpJewelcrafting))
	eq.debug(string.format("%d", Rule.TradeskillUpMakePoison))
	eq.debug(string.format("%d", Rule.TradeskillUpPottery))
	eq.debug(string.format("%d", Rule.TradeskillUpResearch))
	eq.debug(string.format("%d", Rule.TradeskillUpTailoring))
	eq.debug(string.format("%d", Rule.TradeskillUpTinkering))
	eq.debug(string.format("%d", Rule.TrainSenseHeading))
	eq.debug(string.format("%d", Rule.TransformSummonedBags))
	eq.debug(string.format("%d", Rule.TranslocateTimeLimit))
	eq.debug(string.format("%d", Rule.TributePlatConversionRate))
	eq.debug(string.format("%d", Rule.TributeTime))
	eq.debug(string.format("%d", Rule.TributeTimeRefreshInterval))
	eq.debug(string.format("%d", Rule.TrivialTradeskillCombinesNoFail))
	eq.debug(string.format("%d", Rule.TrollCommonTongue))
	eq.debug(string.format("%d", Rule.TunnelVisionAggroMod))
	eq.debug(string.format("%d", Rule.TutorialZoneID))
	eq.debug(string.format("%d", Rule.UnTargetableSwarmPet))
	eq.debug(string.format("%d", Rule.UndeadAlwaysAggro))
	eq.debug(string.format("%d", Rule.UnmemSpellsOnDeath))
	eq.debug(string.format("%d", Rule.UnusedAAPointCap))
	eq.debug(string.format("%d", Rule.UpdateOneElementPerTask))
	eq.debug(string.format("%d", Rule.UpkeepIntervalMS))
	eq.debug(string.format("%d", Rule.UseAdditiveFocusFromWornSlot))
	eq.debug(string.format("%d", Rule.UseAdditiveFocusFromWornSlotWithLimits))
	eq.debug(string.format("%d", Rule.UseAltSinisterStrikeFormula))
	eq.debug(string.format("%d", Rule.UseBaneDamage))
	eq.debug(string.format("%d", Rule.UseBannedIPsTable))
	eq.debug(string.format("%d", Rule.UseCHAScribeHack))
	eq.debug(string.format("%d", Rule.UseCharacterMaxLevelForGuildTributes))
	eq.debug(string.format("%d", Rule.UseClassAsLastName))
	eq.debug(string.format("%d", Rule.UseClassicSpellFocus))
	eq.debug(string.format("%d", Rule.UseClientBasedExpansionSettings))
	eq.debug(string.format("%d", Rule.UseCurrentExpansionAAOnly))
	eq.debug(string.format("%d", Rule.UseDeathExpLossMult))
	eq.debug(string.format("%d", Rule.UseExtendedPoisonProcs))
	eq.debug(string.format("%d", Rule.UseFadingMemoriesMaxLevel))
	eq.debug(string.format("%d", Rule.UseForageCommonFood))
	eq.debug(string.format("%d", Rule.UseIntervalAC))
	eq.debug(string.format("%d", Rule.UseItemBonusesForNonPets))
	eq.debug(string.format("%d", Rule.UseItemCastMessage))
	eq.debug(string.format("%d", Rule.UseItemLinksForKeyRing))
	eq.debug(string.format("%d", Rule.UseLegacyFizzleCode))
	eq.debug(string.format("%d", Rule.UseLevelAggro))
	eq.debug(string.format("%d", Rule.UseLimitTradeskillSearchSkillDiff))
	eq.debug(string.format("%d", Rule.UseLiveBlockedMessage))
	eq.debug(string.format("%d", Rule.UseLiveCombatRounds))
	eq.debug(string.format("%d", Rule.UseLiveFactionMessage))
	eq.debug(string.format("%d", Rule.UseLiveRiposteMechanics))
	eq.debug(string.format("%d", Rule.UseLiveSpellProjectileGFX))
	eq.debug(string.format("%d", Rule.UseMeditateBasedManaRegen))
	eq.debug(string.format("%d", Rule.UseNPCDamageClassLevelMods))
	eq.debug(string.format("%d", Rule.UseNewStatsWindow))
	eq.debug(string.format("%d", Rule.UseNoJunkFishing))
	eq.debug(string.format("%d", Rule.UseOldBindWound))
	eq.debug(string.format("%d", Rule.UseOldClassExpPenalties))
	eq.debug(string.format("%d", Rule.UseOldConSystem))
	eq.debug(string.format("%d", Rule.UseOldRaceExpPenalties))
	eq.debug(string.format("%d", Rule.UseOldRaceRezEffects))
	eq.debug(string.format("%d", Rule.UseOldShadowKnightClassExport))
	eq.debug(string.format("%d", Rule.UsePEQZoneDebuffs))
	eq.debug(string.format("%d", Rule.UsePriceMod))
	eq.debug(string.format("%d", Rule.UseRaceClassExpBonuses))
	eq.debug(string.format("%d", Rule.UseResurrectionSickness))
	eq.debug(string.format("%d", Rule.UseRevampHandToHand))
	eq.debug(string.format("%d", Rule.UseSpellFileSongCap))
	eq.debug(string.format("%d", Rule.UseSpellImpliedTargeting))
	eq.debug(string.format("%d", Rule.UseStackablePickPocketing))
	eq.debug(string.format("%d", Rule.UseXPConScaling))
	eq.debug(string.format("%d", Rule.UseZoneController))
	eq.debug(string.format("%d", Rule.WarmlyFactionMinimum))
	eq.debug(string.format("%d", Rule.WarriorTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.WaterMatchRequiredForAutoFireLoS))
	eq.debug(string.format("%d", Rule.WaterMatchRequiredForLoS))
	eq.debug(string.format("%d", Rule.WeatherTimer))
	eq.debug(string.format("%d", Rule.WhiteModifier))
	eq.debug(string.format("%d", Rule.WizCritChance))
	eq.debug(string.format("%d", Rule.WizCritLevel))
	eq.debug(string.format("%d", Rule.WizCritRatio))
	eq.debug(string.format("%d", Rule.WizardCritMaximumRandomRatio))
	eq.debug(string.format("%d", Rule.WizardCritMinimumRandomRatio))
	eq.debug(string.format("%d", Rule.WizardTrackingDistanceMultiplier))
	eq.debug(string.format("%d", Rule.WorldGMSayLogging))
	eq.debug(string.format("%d", Rule.WorldProcessRate))
	eq.debug(string.format("%d", Rule.YellowModifier))
	eq.debug(string.format("%d", Rule.ZoneAutobootTimeoutMS))
	eq.debug(string.format("%d", Rule._BoolRuleCount))
	eq.debug(string.format("%d", Rule._IntRuleCount))
	eq.debug(string.format("%d", Rule._RealRuleCount))
	eq.debug(string.format("%d", Rule._StringRuleCount))
	eq.debug(string.format("%d", Zone.abysmal))
	eq.debug(string.format("%d", Zone.acrylia))
	eq.debug(string.format("%d", Zone.airplane))
	eq.debug(string.format("%d", Zone.akanon))
	eq.debug(string.format("%d", Zone.akheva))
	eq.debug(string.format("%d", Zone.alkabormare))
	eq.debug(string.format("%d", Zone.anguish))
	eq.debug(string.format("%d", Zone.apprentice))
	eq.debug(string.format("%d", Zone.arcstone))
	eq.debug(string.format("%d", Zone.arelis))
	eq.debug(string.format("%d", Zone.arena))
	eq.debug(string.format("%d", Zone.arena2))
	eq.debug(string.format("%d", Zone.argath))
	eq.debug(string.format("%d", Zone.arthicrex))
	eq.debug(string.format("%d", Zone.arttest))
	eq.debug(string.format("%d", Zone.ashengate))
	eq.debug(string.format("%d", Zone.atiiki))
	eq.debug(string.format("%d", Zone.aviak))
	eq.debug(string.format("%d", Zone.barindu))
	eq.debug(string.format("%d", Zone.barren))
	eq.debug(string.format("%d", Zone.barter))
	eq.debug(string.format("%d", Zone.bazaar))
	eq.debug(string.format("%d", Zone.beastdomain))
	eq.debug(string.format("%d", Zone.befallen))
	eq.debug(string.format("%d", Zone.befallenb))
	eq.debug(string.format("%d", Zone.beholder))
	eq.debug(string.format("%d", Zone.bertoxtemple))
	eq.debug(string.format("%d", Zone.blackburrow))
	eq.debug(string.format("%d", Zone.blacksail))
	eq.debug(string.format("%d", Zone.bloodfields))
	eq.debug(string.format("%d", Zone.bloodmoon))
	eq.debug(string.format("%d", Zone.bothunder))
	eq.debug(string.format("%d", Zone.breedinggrounds))
	eq.debug(string.format("%d", Zone.brellsarena))
	eq.debug(string.format("%d", Zone.brellsrest))
	eq.debug(string.format("%d", Zone.brellstemple))
	eq.debug(string.format("%d", Zone.broodlands))
	eq.debug(string.format("%d", Zone.buriedsea))
	eq.debug(string.format("%d", Zone.burningwood))
	eq.debug(string.format("%d", Zone.butcher))
	eq.debug(string.format("%d", Zone.cabeast))
	eq.debug(string.format("%d", Zone.cabwest))
	eq.debug(string.format("%d", Zone.cauldron))
	eq.debug(string.format("%d", Zone.causeway))
	eq.debug(string.format("%d", Zone.cazicthule))
	eq.debug(string.format("%d", Zone.chambersa))
	eq.debug(string.format("%d", Zone.chambersb))
	eq.debug(string.format("%d", Zone.chambersc))
	eq.debug(string.format("%d", Zone.chambersd))
	eq.debug(string.format("%d", Zone.chamberse))
	eq.debug(string.format("%d", Zone.chambersf))
	eq.debug(string.format("%d", Zone.chapterhouse))
	eq.debug(string.format("%d", Zone.charasis))
	eq.debug(string.format("%d", Zone.chardok))
	eq.debug(string.format("%d", Zone.chardokb))
	eq.debug(string.format("%d", Zone.citymist))
	eq.debug(string.format("%d", Zone.cityofbronze))
	eq.debug(string.format("%d", Zone.clz))
	eq.debug(string.format("%d", Zone.cobaltscar))
	eq.debug(string.format("%d", Zone.codecay))
	eq.debug(string.format("%d", Zone.commonlands))
	eq.debug(string.format("%d", Zone.commons))
	eq.debug(string.format("%d", Zone.convorteum))
	eq.debug(string.format("%d", Zone.coolingchamber))
	eq.debug(string.format("%d", Zone.corathus))
	eq.debug(string.format("%d", Zone.corathusa))
	eq.debug(string.format("%d", Zone.corathusb))
	eq.debug(string.format("%d", Zone.crescent))
	eq.debug(string.format("%d", Zone.crushbone))
	eq.debug(string.format("%d", Zone.cryptofshade))
	eq.debug(string.format("%d", Zone.crystal))
	eq.debug(string.format("%d", Zone.crystallos))
	eq.debug(string.format("%d", Zone.crystalshard))
	eq.debug(string.format("%d", Zone.cshome))
	eq.debug(string.format("%d", Zone.dalnir))
	eq.debug(string.format("%d", Zone.dawnshroud))
	eq.debug(string.format("%d", Zone.deadbone))
	eq.debug(string.format("%d", Zone.delvea))
	eq.debug(string.format("%d", Zone.delveb))
	eq.debug(string.format("%d", Zone.devastation))
	eq.debug(string.format("%d", Zone.devastationa))
	eq.debug(string.format("%d", Zone.direwind))
	eq.debug(string.format("%d", Zone.discord))
	eq.debug(string.format("%d", Zone.discordtower))
	eq.debug(string.format("%d", Zone.drachnidhive))
	eq.debug(string.format("%d", Zone.drachnidhivea))
	eq.debug(string.format("%d", Zone.drachnidhiveb))
	eq.debug(string.format("%d", Zone.drachnidhivec))
	eq.debug(string.format("%d", Zone.dragoncrypt))
	eq.debug(string.format("%d", Zone.dragonscale))
	eq.debug(string.format("%d", Zone.dragonscaleb))
	eq.debug(string.format("%d", Zone.dranik))
	eq.debug(string.format("%d", Zone.dranikcatacombsa))
	eq.debug(string.format("%d", Zone.dranikcatacombsb))
	eq.debug(string.format("%d", Zone.dranikcatacombsc))
	eq.debug(string.format("%d", Zone.dranikhollowsa))
	eq.debug(string.format("%d", Zone.dranikhollowsb))
	eq.debug(string.format("%d", Zone.dranikhollowsc))
	eq.debug(string.format("%d", Zone.draniksewersa))
	eq.debug(string.format("%d", Zone.draniksewersb))
	eq.debug(string.format("%d", Zone.draniksewersc))
	eq.debug(string.format("%d", Zone.draniksscar))
	eq.debug(string.format("%d", Zone.dreadlands))
	eq.debug(string.format("%d", Zone.dreadspire))
	eq.debug(string.format("%d", Zone.droga))
	eq.debug(string.format("%d", Zone.dulak))
	eq.debug(string.format("%d", Zone.eastkarana))
	eq.debug(string.format("%d", Zone.eastkorlach))
	eq.debug(string.format("%d", Zone.eastkorlacha))
	eq.debug(string.format("%d", Zone.eastsepulcher))
	eq.debug(string.format("%d", Zone.eastwastes))
	eq.debug(string.format("%d", Zone.eastwastesshard))
	eq.debug(string.format("%d", Zone.echo_))
	eq.debug(string.format("%d", Zone.ecommons))
	eq.debug(string.format("%d", Zone.elddar))
	eq.debug(string.format("%d", Zone.elddara))
	eq.debug(string.format("%d", Zone.emeraldjungle))
	eq.debug(string.format("%d", Zone.erudnext))
	eq.debug(string.format("%d", Zone.erudnint))
	eq.debug(string.format("%d", Zone.erudsxing))
	eq.debug(string.format("%d", Zone.erudsxing2))
	eq.debug(string.format("%d", Zone.everfrost))
	eq.debug(string.format("%d", Zone.eviltree))
	eq.debug(string.format("%d", Zone.fallen))
	eq.debug(string.format("%d", Zone.fearplane))
	eq.debug(string.format("%d", Zone.feerrott))
	eq.debug(string.format("%d", Zone.feerrott2))
	eq.debug(string.format("%d", Zone.felwithea))
	eq.debug(string.format("%d", Zone.felwitheb))
	eq.debug(string.format("%d", Zone.ferubi))
	eq.debug(string.format("%d", Zone.fhalls))
	eq.debug(string.format("%d", Zone.fieldofbone))
	eq.debug(string.format("%d", Zone.firiona))
	eq.debug(string.format("%d", Zone.foundation))
	eq.debug(string.format("%d", Zone.freeportacademy))
	eq.debug(string.format("%d", Zone.freeportarena))
	eq.debug(string.format("%d", Zone.freeportcityhall))
	eq.debug(string.format("%d", Zone.freeporteast))
	eq.debug(string.format("%d", Zone.freeporthall))
	eq.debug(string.format("%d", Zone.freeportmilitia))
	eq.debug(string.format("%d", Zone.freeportsewers))
	eq.debug(string.format("%d", Zone.freeporttemple))
	eq.debug(string.format("%d", Zone.freeporttheater))
	eq.debug(string.format("%d", Zone.freeportwest))
	eq.debug(string.format("%d", Zone.freporte))
	eq.debug(string.format("%d", Zone.freportn))
	eq.debug(string.format("%d", Zone.freportw))
	eq.debug(string.format("%d", Zone.frontiermtns))
	eq.debug(string.format("%d", Zone.frostcrypt))
	eq.debug(string.format("%d", Zone.frozenshadow))
	eq.debug(string.format("%d", Zone.fungalforest))
	eq.debug(string.format("%d", Zone.fungusgrove))
	eq.debug(string.format("%d", Zone.gfaydark))
	eq.debug(string.format("%d", Zone.greatdivide))
	eq.debug(string.format("%d", Zone.grelleth))
	eq.debug(string.format("%d", Zone.griegsend))
	eq.debug(string.format("%d", Zone.grimling))
	eq.debug(string.format("%d", Zone.grobb))
	eq.debug(string.format("%d", Zone.growthplane))
	eq.debug(string.format("%d", Zone.guardian))
	eq.debug(string.format("%d", Zone.guildhall))
	eq.debug(string.format("%d", Zone.guildlobby))
	eq.debug(string.format("%d", Zone.guka))
	eq.debug(string.format("%d", Zone.gukb))
	eq.debug(string.format("%d", Zone.gukbottom))
	eq.debug(string.format("%d", Zone.gukc))
	eq.debug(string.format("%d", Zone.gukd))
	eq.debug(string.format("%d", Zone.guke))
	eq.debug(string.format("%d", Zone.gukf))
	eq.debug(string.format("%d", Zone.gukg))
	eq.debug(string.format("%d", Zone.gukh))
	eq.debug(string.format("%d", Zone.guktop))
	eq.debug(string.format("%d", Zone.gunthak))
	eq.debug(string.format("%d", Zone.gyrospireb))
	eq.debug(string.format("%d", Zone.gyrospirez))
	eq.debug(string.format("%d", Zone.halas))
	eq.debug(string.format("%d", Zone.harbingers))
	eq.debug(string.format("%d", Zone.hateplane))
	eq.debug(string.format("%d", Zone.hateplaneb))
	eq.debug(string.format("%d", Zone.hatesfury))
	eq.debug(string.format("%d", Zone.highkeep))
	eq.debug(string.format("%d", Zone.highpass))
	eq.debug(string.format("%d", Zone.highpasshold))
	eq.debug(string.format("%d", Zone.highpasskeep))
	eq.debug(string.format("%d", Zone.hillsofshade))
	eq.debug(string.format("%d", Zone.hohonora))
	eq.debug(string.format("%d", Zone.hohonorb))
	eq.debug(string.format("%d", Zone.hole))
	eq.debug(string.format("%d", Zone.hollowshade))
	eq.debug(string.format("%d", Zone.housegarden))
	eq.debug(string.format("%d", Zone.iceclad))
	eq.debug(string.format("%d", Zone.icefall))
	eq.debug(string.format("%d", Zone.ikkinz))
	eq.debug(string.format("%d", Zone.illsalin))
	eq.debug(string.format("%d", Zone.illsalina))
	eq.debug(string.format("%d", Zone.illsalinb))
	eq.debug(string.format("%d", Zone.illsalinc))
	eq.debug(string.format("%d", Zone.inktuta))
	eq.debug(string.format("%d", Zone.innothule))
	eq.debug(string.format("%d", Zone.innothuleb))
	eq.debug(string.format("%d", Zone.jaggedpine))
	eq.debug(string.format("%d", Zone.jardelshook))
	eq.debug(string.format("%d", Zone.kael))
	eq.debug(string.format("%d", Zone.kaelshard))
	eq.debug(string.format("%d", Zone.kaesora))
	eq.debug(string.format("%d", Zone.kaladima))
	eq.debug(string.format("%d", Zone.kaladimb))
	eq.debug(string.format("%d", Zone.karnor))
	eq.debug(string.format("%d", Zone.katta))
	eq.debug(string.format("%d", Zone.kattacastrum))
	eq.debug(string.format("%d", Zone.kedge))
	eq.debug(string.format("%d", Zone.kerraridge))
	eq.debug(string.format("%d", Zone.kithforest))
	eq.debug(string.format("%d", Zone.kithicor))
	eq.debug(string.format("%d", Zone.kodtaz))
	eq.debug(string.format("%d", Zone.korascian))
	eq.debug(string.format("%d", Zone.kurn))
	eq.debug(string.format("%d", Zone.lakeofillomen))
	eq.debug(string.format("%d", Zone.lakerathe))
	eq.debug(string.format("%d", Zone.lavastorm))
	eq.debug(string.format("%d", Zone.letalis))
	eq.debug(string.format("%d", Zone.lfaydark))
	eq.debug(string.format("%d", Zone.lichencreep))
	eq.debug(string.format("%d", Zone.load))
	eq.debug(string.format("%d", Zone.load2))
	eq.debug(string.format("%d", Zone.lopingplains))
	eq.debug(string.format("%d", Zone.maiden))
	eq.debug(string.format("%d", Zone.maidensgrave))
	eq.debug(string.format("%d", Zone.mansion))
	eq.debug(string.format("%d", Zone.mechanotus))
	eq.debug(string.format("%d", Zone.mesa))
	eq.debug(string.format("%d", Zone.mira))
	eq.debug(string.format("%d", Zone.miragulmare))
	eq.debug(string.format("%d", Zone.mirb))
	eq.debug(string.format("%d", Zone.mirc))
	eq.debug(string.format("%d", Zone.mird))
	eq.debug(string.format("%d", Zone.mire))
	eq.debug(string.format("%d", Zone.mirf))
	eq.debug(string.format("%d", Zone.mirg))
	eq.debug(string.format("%d", Zone.mirh))
	eq.debug(string.format("%d", Zone.miri))
	eq.debug(string.format("%d", Zone.mirj))
	eq.debug(string.format("%d", Zone.mischiefplane))
	eq.debug(string.format("%d", Zone.mistmoore))
	eq.debug(string.format("%d", Zone.misty))
	eq.debug(string.format("%d", Zone.mistythicket))
	eq.debug(string.format("%d", Zone.mmca))
	eq.debug(string.format("%d", Zone.mmcb))
	eq.debug(string.format("%d", Zone.mmcc))
	eq.debug(string.format("%d", Zone.mmcd))
	eq.debug(string.format("%d", Zone.mmce))
	eq.debug(string.format("%d", Zone.mmcf))
	eq.debug(string.format("%d", Zone.mmcg))
	eq.debug(string.format("%d", Zone.mmch))
	eq.debug(string.format("%d", Zone.mmci))
	eq.debug(string.format("%d", Zone.mmcj))
	eq.debug(string.format("%d", Zone.monkeyrock))
	eq.debug(string.format("%d", Zone.moors))
	eq.debug(string.format("%d", Zone.morellcastle))
	eq.debug(string.format("%d", Zone.mseru))
	eq.debug(string.format("%d", Zone.nadox))
	eq.debug(string.format("%d", Zone.najena))
	eq.debug(string.format("%d", Zone.natimbi))
	eq.debug(string.format("%d", Zone.necropolis))
	eq.debug(string.format("%d", Zone.nedaria))
	eq.debug(string.format("%d", Zone.neighborhood))
	eq.debug(string.format("%d", Zone.nektropos))
	eq.debug(string.format("%d", Zone.nektulos))
	eq.debug(string.format("%d", Zone.nektulosa))
	eq.debug(string.format("%d", Zone.neriaka))
	eq.debug(string.format("%d", Zone.neriakb))
	eq.debug(string.format("%d", Zone.neriakc))
	eq.debug(string.format("%d", Zone.neriakd))
	eq.debug(string.format("%d", Zone.netherbian))
	eq.debug(string.format("%d", Zone.nexus))
	eq.debug(string.format("%d", Zone.nightmareb))
	eq.debug(string.format("%d", Zone.northkarana))
	eq.debug(string.format("%d", Zone.northro))
	eq.debug(string.format("%d", Zone.nro))
	eq.debug(string.format("%d", Zone.nurga))
	eq.debug(string.format("%d", Zone.oasis))
	eq.debug(string.format("%d", Zone.oceangreenhills))
	eq.debug(string.format("%d", Zone.oceangreenvillage))
	eq.debug(string.format("%d", Zone.oceanoftears))
	eq.debug(string.format("%d", Zone.oggok))
	eq.debug(string.format("%d", Zone.oldblackburrow))
	eq.debug(string.format("%d", Zone.oldbloodfield))
	eq.debug(string.format("%d", Zone.oldcommons))
	eq.debug(string.format("%d", Zone.olddranik))
	eq.debug(string.format("%d", Zone.oldfieldofbone))
	eq.debug(string.format("%d", Zone.oldhighpass))
	eq.debug(string.format("%d", Zone.oldkaesoraa))
	eq.debug(string.format("%d", Zone.oldkaesorab))
	eq.debug(string.format("%d", Zone.oldkithicor))
	eq.debug(string.format("%d", Zone.oldkurn))
	eq.debug(string.format("%d", Zone.oot))
	eq.debug(string.format("%d", Zone.overthere))
	eq.debug(string.format("%d", Zone.paineel))
	eq.debug(string.format("%d", Zone.paludal))
	eq.debug(string.format("%d", Zone.paw))
	eq.debug(string.format("%d", Zone.pellucid))
	eq.debug(string.format("%d", Zone.permafrost))
	eq.debug(string.format("%d", Zone.pillarsalra))
	eq.debug(string.format("%d", Zone.poair))
	eq.debug(string.format("%d", Zone.podisease))
	eq.debug(string.format("%d", Zone.poeartha))
	eq.debug(string.format("%d", Zone.poearthb))
	eq.debug(string.format("%d", Zone.pofire))
	eq.debug(string.format("%d", Zone.poinnovation))
	eq.debug(string.format("%d", Zone.pojustice))
	eq.debug(string.format("%d", Zone.poknowledge))
	eq.debug(string.format("%d", Zone.ponightmare))
	eq.debug(string.format("%d", Zone.postorms))
	eq.debug(string.format("%d", Zone.potactics))
	eq.debug(string.format("%d", Zone.potimea))
	eq.debug(string.format("%d", Zone.potimeb))
	eq.debug(string.format("%d", Zone.potorment))
	eq.debug(string.format("%d", Zone.potranquility))
	eq.debug(string.format("%d", Zone.povalor))
	eq.debug(string.format("%d", Zone.powar))
	eq.debug(string.format("%d", Zone.powater))
	eq.debug(string.format("%d", Zone.precipiceofwar))
	eq.debug(string.format("%d", Zone.provinggrounds))
	eq.debug(string.format("%d", Zone.qcat))
	eq.debug(string.format("%d", Zone.qey2hh1))
	eq.debug(string.format("%d", Zone.qeynos))
	eq.debug(string.format("%d", Zone.qeynos2))
	eq.debug(string.format("%d", Zone.qeytoqrg))
	eq.debug(string.format("%d", Zone.qinimi))
	eq.debug(string.format("%d", Zone.qrg))
	eq.debug(string.format("%d", Zone.qvic))
	eq.debug(string.format("%d", Zone.qvicb))
	eq.debug(string.format("%d", Zone.rage))
	eq.debug(string.format("%d", Zone.ragea))
	eq.debug(string.format("%d", Zone.rathechamber))
	eq.debug(string.format("%d", Zone.rathemtn))
	eq.debug(string.format("%d", Zone.redfeather))
	eq.debug(string.format("%d", Zone.relic))
	eq.debug(string.format("%d", Zone.resplendent))
	eq.debug(string.format("%d", Zone.riftseekers))
	eq.debug(string.format("%d", Zone.rivervale))
	eq.debug(string.format("%d", Zone.riwwi))
	eq.debug(string.format("%d", Zone.roost))
	eq.debug(string.format("%d", Zone.rubak))
	eq.debug(string.format("%d", Zone.ruja))
	eq.debug(string.format("%d", Zone.rujb))
	eq.debug(string.format("%d", Zone.rujc))
	eq.debug(string.format("%d", Zone.rujd))
	eq.debug(string.format("%d", Zone.ruje))
	eq.debug(string.format("%d", Zone.rujf))
	eq.debug(string.format("%d", Zone.rujg))
	eq.debug(string.format("%d", Zone.rujh))
	eq.debug(string.format("%d", Zone.ruji))
	eq.debug(string.format("%d", Zone.rujj))
	eq.debug(string.format("%d", Zone.runnyeye))
	eq.debug(string.format("%d", Zone.sarithcity))
	eq.debug(string.format("%d", Zone.scarlet))
	eq.debug(string.format("%d", Zone.sebilis))
	eq.debug(string.format("%d", Zone.sepulcher))
	eq.debug(string.format("%d", Zone.shadeweaver))
	eq.debug(string.format("%d", Zone.shadowhaven))
	eq.debug(string.format("%d", Zone.shadowrest))
	eq.debug(string.format("%d", Zone.shadowspine))
	eq.debug(string.format("%d", Zone.shardslanding))
	eq.debug(string.format("%d", Zone.sharvahl))
	eq.debug(string.format("%d", Zone.shiningcity))
	eq.debug(string.format("%d", Zone.shipmvm))
	eq.debug(string.format("%d", Zone.shipmvp))
	eq.debug(string.format("%d", Zone.shipmvu))
	eq.debug(string.format("%d", Zone.shippvu))
	eq.debug(string.format("%d", Zone.shipuvu))
	eq.debug(string.format("%d", Zone.shipworkshop))
	eq.debug(string.format("%d", Zone.silyssar))
	eq.debug(string.format("%d", Zone.sirens))
	eq.debug(string.format("%d", Zone.skyfire))
	eq.debug(string.format("%d", Zone.skylance))
	eq.debug(string.format("%d", Zone.skyshrine))
	eq.debug(string.format("%d", Zone.sleeper))
	eq.debug(string.format("%d", Zone.sncrematory))
	eq.debug(string.format("%d", Zone.snlair))
	eq.debug(string.format("%d", Zone.snplant))
	eq.debug(string.format("%d", Zone.snpool))
	eq.debug(string.format("%d", Zone.soldunga))
	eq.debug(string.format("%d", Zone.soldungb))
	eq.debug(string.format("%d", Zone.soldungc))
	eq.debug(string.format("%d", Zone.solrotower))
	eq.debug(string.format("%d", Zone.soltemple))
	eq.debug(string.format("%d", Zone.solteris))
	eq.debug(string.format("%d", Zone.somnium))
	eq.debug(string.format("%d", Zone.southkarana))
	eq.debug(string.format("%d", Zone.southro))
	eq.debug(string.format("%d", Zone.sro))
	eq.debug(string.format("%d", Zone.sseru))
	eq.debug(string.format("%d", Zone.ssratemple))
	eq.debug(string.format("%d", Zone.steamfactory))
	eq.debug(string.format("%d", Zone.steamfont))
	eq.debug(string.format("%d", Zone.steamfontmts))
	eq.debug(string.format("%d", Zone.steppes))
	eq.debug(string.format("%d", Zone.stillmoona))
	eq.debug(string.format("%d", Zone.stillmoonb))
	eq.debug(string.format("%d", Zone.stonebrunt))
	eq.debug(string.format("%d", Zone.stonehive))
	eq.debug(string.format("%d", Zone.stonesnake))
	eq.debug(string.format("%d", Zone.suncrest))
	eq.debug(string.format("%d", Zone.sunderock))
	eq.debug(string.format("%d", Zone.swampofnohope))
	eq.debug(string.format("%d", Zone.tacvi))
	eq.debug(string.format("%d", Zone.taka))
	eq.debug(string.format("%d", Zone.takb))
	eq.debug(string.format("%d", Zone.takc))
	eq.debug(string.format("%d", Zone.takd))
	eq.debug(string.format("%d", Zone.take))
	eq.debug(string.format("%d", Zone.takf))
	eq.debug(string.format("%d", Zone.takg))
	eq.debug(string.format("%d", Zone.takh))
	eq.debug(string.format("%d", Zone.taki))
	eq.debug(string.format("%d", Zone.takishruins))
	eq.debug(string.format("%d", Zone.takishruinsa))
	eq.debug(string.format("%d", Zone.takj))
	eq.debug(string.format("%d", Zone.templeveeshan))
	eq.debug(string.format("%d", Zone.tenebrous))
	eq.debug(string.format("%d", Zone.thalassius))
	eq.debug(string.format("%d", Zone.theater))
	eq.debug(string.format("%d", Zone.theatera))
	eq.debug(string.format("%d", Zone.thedeep))
	eq.debug(string.format("%d", Zone.thegrey))
	eq.debug(string.format("%d", Zone.thenest))
	eq.debug(string.format("%d", Zone.thevoida))
	eq.debug(string.format("%d", Zone.thevoidb))
	eq.debug(string.format("%d", Zone.thevoidc))
	eq.debug(string.format("%d", Zone.thevoidd))
	eq.debug(string.format("%d", Zone.thevoide))
	eq.debug(string.format("%d", Zone.thevoidf))
	eq.debug(string.format("%d", Zone.thevoidg))
	eq.debug(string.format("%d", Zone.thuledream))
	eq.debug(string.format("%d", Zone.thulehouse1))
	eq.debug(string.format("%d", Zone.thulehouse2))
	eq.debug(string.format("%d", Zone.thulelibrary))
	eq.debug(string.format("%d", Zone.thundercrest))
	eq.debug(string.format("%d", Zone.thurgadina))
	eq.debug(string.format("%d", Zone.thurgadinb))
	eq.debug(string.format("%d", Zone.timorous))
	eq.debug(string.format("%d", Zone.tipt))
	eq.debug(string.format("%d", Zone.torgiran))
	eq.debug(string.format("%d", Zone.toskirakk))
	eq.debug(string.format("%d", Zone.tox))
	eq.debug(string.format("%d", Zone.toxxulia))
	eq.debug(string.format("%d", Zone.trakanon))
	eq.debug(string.format("%d", Zone.tutorial))
	eq.debug(string.format("%d", Zone.tutoriala))
	eq.debug(string.format("%d", Zone.tutorialb))
	eq.debug(string.format("%d", Zone.twilight))
	eq.debug(string.format("%d", Zone.txevu))
	eq.debug(string.format("%d", Zone.umbral))
	eq.debug(string.format("%d", Zone.underquarry))
	eq.debug(string.format("%d", Zone.unrest))
	eq.debug(string.format("%d", Zone.uqua))
	eq.debug(string.format("%d", Zone.valdeholm))
	eq.debug(string.format("%d", Zone.veeshan))
	eq.debug(string.format("%d", Zone.veksar))
	eq.debug(string.format("%d", Zone.velketor))
	eq.debug(string.format("%d", Zone.vergalid))
	eq.debug(string.format("%d", Zone.vexthal))
	eq.debug(string.format("%d", Zone.vxed))
	eq.debug(string.format("%d", Zone.wakening))
	eq.debug(string.format("%d", Zone.wallofslaughter))
	eq.debug(string.format("%d", Zone.warrens))
	eq.debug(string.format("%d", Zone.warslikswood))
	eq.debug(string.format("%d", Zone.weddingchapel))
	eq.debug(string.format("%d", Zone.weddingchapeldark))
	eq.debug(string.format("%d", Zone.well))
	eq.debug(string.format("%d", Zone.westkorlach))
	eq.debug(string.format("%d", Zone.westkorlacha))
	eq.debug(string.format("%d", Zone.westkorlachb))
	eq.debug(string.format("%d", Zone.westkorlachc))
	eq.debug(string.format("%d", Zone.westsepulcher))
	eq.debug(string.format("%d", Zone.westwastes))
	eq.debug(string.format("%d", Zone.windsong))
	eq.debug(string.format("%d", Zone.xorbb))
	eq.debug(string.format("%d", Zone.yxtta))
	eq.debug(string.format("%d", Zone.zhisza))
end
